<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en-US" lang="en-US">
<head>
<title>File class</title>
<link rel="stylesheet" type="text/css" href="../../../remark_files/remark.css" />
<link rel="stylesheet" type="text/css" href="../../../remark_files/pygments.css" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8"></meta>
</head>
<body>
<div id = "container">
<div id = "remark">
<h1>File.pm</h1>
<p><a href="../modules.htm">Back to User-defined classes</a></p>
<p><a href="directory.htm">SOMSDS/lib/SOMSDS/</a></p>
<div class="highlight"><pre><span class="c1">#!/usr/bin/perl</span>
<span class="c1"># (c) German Gomez-Herrero, g.gomez@nin.knaw.nl</span>
<span class="p"></span>
<span class="c1"># Description: File class</span>
<span class="c1"># Documentation: modules.txt</span>
<span class="p"></span>
<span class="p"></span>
<span class="nb">package</span> <span class="n">File</span><span class="p">;</span>
<span class="p"></span>
<span class="k">use</span> <span class="nn">SOMSDS::</span><span class="n">File</span><span class="p">;</span>
<span class="k">use</span> <span class="n">Carp</span><span class="p">;</span>
<span class="k">use</span> <span class="n">Cwd</span> <span class="s">&#39;abs_path&#39;</span><span class="p">;</span>
<span class="k">use</span> <span class="nn">Config::</span><span class="n">IniFiles</span><span class="p">;</span>
<span class="k">use</span> <span class="nn">File::Spec::</span><span class="n">Functions</span><span class="p">;</span>
<span class="k">use</span> <span class="nn">File::</span><span class="n">Basename</span><span class="p">;</span>
<span class="k">use</span> <span class="nn">File::</span><span class="n">Find</span><span class="p">;</span>
<span class="k">use</span> <span class="nn">Time::</span><span class="n">Format</span> <span class="sx">qw(%time)</span><span class="p">;</span>
<span class="p"></span>
<span class="c1">#use 5.014001;</span>
<span class="k">use</span> <span class="n">strict</span><span class="p">;</span>
<span class="k">use</span> <span class="n">warnings</span><span class="p">;</span>
<span class="p"></span>
<span class="nb">require</span> <span class="n">Exporter</span><span class="p">;</span>
<span class="p"></span>
<span class="k">our</span> <span class="nv">@ISA</span> <span class="o">=</span> <span class="sx">qw(Exporter)</span><span class="p">;</span>
<span class="p"></span>
<span class="c1"># Items to export into callers namespace by default. Note: do not export</span>
<span class="c1"># names by default without a very good reason. Use EXPORT_OK instead.</span>
<span class="c1"># Do not simply export all your public functions/methods/constants.</span>
<span class="p"></span>
<span class="c1"># This allows declaration  use SOMSDS &#39;:all&#39;;</span>
<span class="c1"># If you do not need this, moving things directly into @EXPORT or @EXPORT_OK</span>
<span class="c1"># will save memory.</span>
<span class="k">our</span> <span class="nv">%EXPORT_TAGS</span> <span class="o">=</span> <span class="p">(</span> <span class="s">&#39;all&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span> <span class="sx">qw(</span>
<span class="sx">   </span>
<span class="sx">)</span> <span class="p">]</span> <span class="p">);</span>
<span class="p"></span>
<span class="k">our</span> <span class="nv">@EXPORT_OK</span> <span class="o">=</span> <span class="p">(</span> <span class="nv">@</span><span class="p">{</span> <span class="nv">$EXPORT_TAGS</span><span class="p">{</span><span class="s">&#39;all&#39;</span><span class="p">}</span> <span class="p">}</span> <span class="p">);</span>
<span class="p"></span>
<span class="k">our</span> <span class="nv">@EXPORT</span> <span class="o">=</span> <span class="sx">qw(</span>
<span class="sx">   </span>
<span class="sx">)</span><span class="p">;</span>
<span class="p"></span>
<span class="k">our</span> <span class="nv">$VERSION</span> <span class="o">=</span> <span class="s">&#39;0.01&#39;</span><span class="p">;</span>
<span class="p"></span>
<span class="k">our</span> <span class="nv">$AUTOLOAD</span><span class="p">;</span>
<span class="p"></span>
<span class="c1"># Read SOMSDS configuration options</span>
<span class="k">my</span> <span class="p">(</span><span class="nv">$vol</span><span class="p">,</span> <span class="nv">$dir</span><span class="p">,</span> <span class="nv">$file</span><span class="p">)</span> <span class="o">=</span> <span class="nn">File::</span><span class="n">Spec</span><span class="o">-&gt;</span><span class="n">splitpath</span><span class="p">(</span><span class="nv">$0</span><span class="p">);</span>
<span class="k">my</span> <span class="nv">$somsds_file</span><span class="p">;</span>
<span class="k">if</span> <span class="p">(</span><span class="nv">$vol</span><span class="p">){</span>
  <span class="nv">$somsds_file</span> <span class="o">=</span> <span class="n">abs_path</span> <span class="n">catfile</span><span class="p">(</span><span class="nv">$vol</span><span class="p">,</span> <span class="nv">$dir</span><span class="p">,</span><span class="s">&#39;SOMSDS.ini&#39;</span><span class="p">);</span> 
<span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
  <span class="nv">$somsds_file</span> <span class="o">=</span> <span class="n">abs_path</span> <span class="n">catfile</span><span class="p">(</span><span class="nv">$dir</span><span class="p">,</span><span class="s">&#39;SOMSDS.ini&#39;</span><span class="p">);</span> 
<span class="p">}</span>
<span class="k">unless</span> <span class="p">(</span><span class="o">-</span><span class="n">e</span> <span class="nv">$somsds_file</span><span class="p">){</span>  
  <span class="nv">$somsds_file</span> <span class="o">=</span> <span class="s">&#39;/etc/SOMSDS.ini&#39;</span><span class="p">;</span> 
<span class="p">}</span> 
<span class="k">unless</span> <span class="p">(</span><span class="o">-</span><span class="n">e</span> <span class="nv">$somsds_file</span><span class="p">){</span>
  <span class="n">croak</span> <span class="s">&quot;I could not find the configuration file $somsds_file\n&quot;</span><span class="p">;</span>
<span class="p">}</span>
<span class="k">my</span> <span class="nv">$somsds_cfg</span> <span class="o">=</span> <span class="k">new</span> <span class="nn">Config::</span><span class="n">IniFiles</span><span class="p">(</span><span class="o">-</span><span class="n">file</span> <span class="o">=&gt;</span> <span class="nv">$somsds_file</span><span class="p">);</span>
<span class="p"></span>
<span class="p"></span>
<span class="c1">########################################################## PUBLIC STATIC METHODS</span>
<span class="p"></span>
<span class="k">sub </span><span class="nf">new</span> <span class="p">{</span>
  <span class="k">my</span> <span class="nv">$class</span> <span class="o">=</span> <span class="nb">shift</span><span class="p">;</span>
<span class="p"></span>
  <span class="k">my</span> <span class="nv">%fields</span> <span class="o">=</span> <span class="p">(</span>
    <span class="n">id</span>          <span class="o">=&gt;</span> <span class="nb">undef</span><span class="p">,</span>
    <span class="n">root_path</span>   <span class="o">=&gt;</span> <span class="nb">undef</span><span class="p">,</span>
    <span class="n">recording</span>   <span class="o">=&gt;</span> <span class="nb">undef</span><span class="p">,</span>
    <span class="n">subject</span>     <span class="o">=&gt;</span> <span class="nb">undef</span><span class="p">,</span>
    <span class="n">sex</span>         <span class="o">=&gt;</span> <span class="nb">undef</span><span class="p">,</span>
    <span class="n">age</span>         <span class="o">=&gt;</span> <span class="nb">undef</span><span class="p">,</span>
    <span class="n">group</span>       <span class="o">=&gt;</span> <span class="nb">undef</span><span class="p">,</span>
    <span class="n">modality</span>    <span class="o">=&gt;</span> <span class="nb">undef</span><span class="p">,</span>
    <span class="n">device</span>      <span class="o">=&gt;</span> <span class="nb">undef</span><span class="p">,</span>
    <span class="n">technique</span>   <span class="o">=&gt;</span> <span class="nb">undef</span><span class="p">,</span>
    <span class="n">condition</span>   <span class="o">=&gt;</span> <span class="nb">undef</span><span class="p">,</span>
    <span class="n">session</span>     <span class="o">=&gt;</span> <span class="nb">undef</span><span class="p">,</span>
    <span class="n">block</span>       <span class="o">=&gt;</span> <span class="nb">undef</span><span class="p">,</span>
        <span class="n">meta</span>                 <span class="o">=&gt;</span> <span class="nb">undef</span>
  <span class="p">);</span>
<span class="p"></span>
  <span class="k">my</span> <span class="nv">$self</span> <span class="o">=</span> <span class="p">{</span>
    <span class="n">_permitted</span> <span class="o">=&gt;</span> <span class="o">\</span><span class="nv">%fields</span><span class="p">,</span>
    <span class="nv">%fields</span><span class="p">,</span>
  <span class="p">};</span>
<span class="p"></span>
  <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">id</span><span class="p">}</span> <span class="o">=</span> <span class="nb">shift</span><span class="p">;</span>
  <span class="k">my</span> <span class="nv">$fields</span> <span class="o">=</span> <span class="nb">shift</span><span class="p">;</span>
  <span class="k">if</span> <span class="p">(</span><span class="nv">$fields</span><span class="p">){</span>
    <span class="k">for</span> <span class="p">(</span><span class="sx">qw(recording subject modality device technique condition session block meta)</span><span class="p">)</span>
    <span class="p">{</span>
      <span class="k">if</span> <span class="p">(</span><span class="nv">$fields</span><span class="o">-&gt;</span><span class="p">{</span><span class="nv">$_</span><span class="p">})</span> <span class="p">{</span><span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="nv">$_</span><span class="p">}</span> <span class="o">=</span> <span class="nv">$fields</span><span class="o">-&gt;</span><span class="p">{</span><span class="nv">$_</span><span class="p">}};</span>
    <span class="p">}</span>
  <span class="p">}</span>
<span class="p"></span>
  <span class="nb">bless</span> <span class="nv">$self</span><span class="p">,</span> <span class="nv">$class</span><span class="p">;</span>
  <span class="k">return</span> <span class="nv">$self</span><span class="p">;</span>
<span class="p">}</span>  
<span class="p"></span>
<span class="p"></span>
<span class="c1">###################</span>
<span class="p"></span>
<span class="c1"># Generates a text file with a description of each file to which a link will be</span>
<span class="c1"># generated</span>
<span class="k">sub </span><span class="nf">descriptors</span> <span class="p">{</span>
  <span class="k">my</span> <span class="nv">$root</span> <span class="o">=</span> <span class="nb">shift</span><span class="p">;</span>
  <span class="k">my</span> <span class="nv">$descr_subj</span><span class="p">;</span>  
<span class="p"></span>
  <span class="k">while</span> <span class="p">(</span><span class="k">my</span> <span class="nv">$ini_file</span> <span class="o">=</span> <span class="nb">shift</span><span class="p">){</span>   
    <span class="k">my</span> <span class="nv">$ini</span> <span class="o">=</span> <span class="k">new</span> <span class="nn">Config::</span><span class="n">IniFiles</span><span class="p">(</span><span class="o">-</span><span class="n">file</span> <span class="o">=&gt;</span> <span class="nv">$ini_file</span><span class="p">)</span> <span class="o">||</span> 
      <span class="n">croak</span> <span class="s">&quot;I can&#39;t access the configuration file $ini_file:\n&quot;</span><span class="p">;</span>    
<span class="p"></span>
    <span class="k">my</span> <span class="nv">$descr_file</span>       <span class="o">=</span> <span class="nv">$somsds_cfg</span><span class="o">-&gt;</span><span class="n">val</span><span class="p">(</span><span class="s">&#39;descriptor&#39;</span><span class="p">,</span> <span class="s">&#39;file&#39;</span><span class="p">);</span>    
<span class="p"></span>
    <span class="c1"># Strip quotes from regular expressions</span>
    <span class="k">my</span> <span class="nv">%regexp</span><span class="p">;</span>
    <span class="k">foreach</span> <span class="p">(</span><span class="sx">qw(file_id subject_id modality_id device_id technique_id </span>
<span class="sx">                condition_id session_id block_id</span>
<span class="sx">                  meta_id)</span><span class="p">){</span> 
            <span class="k">if</span> <span class="p">(</span><span class="nv">$ini</span><span class="o">-&gt;</span><span class="nb">exists</span><span class="p">(</span><span class="nv">$_</span><span class="p">,</span><span class="s">&#39;regexp&#39;</span><span class="p">)){</span>
            <span class="nv">$regexp</span><span class="p">{</span><span class="nv">$_</span><span class="p">}</span> <span class="o">=</span> <span class="nv">$ini</span><span class="o">-&gt;</span><span class="n">val</span><span class="p">(</span><span class="nv">$_</span><span class="p">,</span><span class="s">&#39;regexp&#39;</span><span class="p">);</span>
            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
                <span class="nv">$regexp</span><span class="p">{</span><span class="nv">$_</span><span class="p">}</span> <span class="o">=</span> <span class="nv">$somsds_cfg</span><span class="o">-&gt;</span><span class="n">val</span><span class="p">(</span><span class="nv">$_</span><span class="p">,</span><span class="s">&#39;regexp&#39;</span><span class="p">);</span>
            <span class="p">}</span>
      <span class="k">next</span> <span class="k">unless</span> <span class="nv">$regexp</span><span class="p">{</span><span class="nv">$_</span><span class="p">};</span>
        <span class="nv">$regexp</span><span class="p">{</span><span class="nv">$_</span><span class="p">}</span> <span class="o">=~</span> <span class="sr">s/^&quot;(.*)&quot;$/$1/</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p"></span>
    <span class="c1"># Generate an empty file descriptor file    </span>
    <span class="k">my</span> <span class="nv">$name</span> <span class="o">=</span> <span class="n">fileparse</span><span class="p">(</span><span class="nv">$ini_file</span><span class="p">,</span> <span class="sx">qr/\.[^.]*/</span><span class="p">);</span>
    <span class="nv">$name</span> <span class="o">=~</span> <span class="sr">s/[._]/-/g</span><span class="p">;</span>
<span class="p"></span>
    <span class="nv">$descr_file</span> <span class="o">=~</span> <span class="sr">s/(\.[^\.]+)//</span><span class="p">;</span>      
    <span class="nv">$descr_file</span> <span class="o">=</span> <span class="n">catfile</span><span class="p">(</span><span class="nv">$root</span><span class="p">,</span> <span class="nv">$descr_file</span><span class="o">.</span><span class="s">&quot;_$name$1&quot;</span><span class="p">);</span>
    <span class="nb">open</span> <span class="p">(</span><span class="n">CSVFILE</span><span class="p">,</span> <span class="s">&#39;&gt;&#39;</span><span class="o">.</span><span class="nv">$descr_file</span><span class="p">)</span> <span class="o">||</span> 
      <span class="n">croak</span> <span class="s">&quot;I could not open $descr_file: $!\n&quot;</span><span class="p">;</span>
     <span class="k">print</span> <span class="n">CSVFILE</span>
      <span class="sx">qq[&quot;id&quot;,&quot;subject&quot;,&quot;modality&quot;,&quot;device&quot;,&quot;technique&quot;,&quot;condition&quot;,&quot;session&quot;,&quot;block&quot;,&quot;meta&quot;]</span><span class="p">,</span>
           <span class="s">&quot;\n&quot;</span><span class="p">;</span>
     <span class="k">print</span> <span class="s">&quot;Creating file descriptions: $descr_file...&quot;</span><span class="p">;</span> <span class="vg">$|</span><span class="o">++</span><span class="p">;</span> 
<span class="p"></span>
    <span class="c1"># Search for files that need to be described within the directory tree    </span>
    <span class="n">find</span><span class="p">(</span>
        <span class="k">sub </span>
<span class="k">        </span><span class="p">{</span>
            <span class="n">_describe_file</span><span class="p">(</span><span class="o">\</span><span class="nv">%regexp</span><span class="p">,</span> <span class="nv">$ini</span><span class="p">,</span> <span class="nv">$root</span><span class="p">);</span>
        <span class="p">},</span>
        <span class="nv">$root</span><span class="p">);</span> 
    <span class="nb">close</span><span class="p">(</span><span class="n">CSVFILE</span><span class="p">);</span>
    <span class="nb">chmod</span> <span class="mo">0755</span><span class="p">,</span> <span class="nv">$descr_file</span> <span class="ow">or</span> <span class="nb">die</span> <span class="s">&quot;Coudn&#39;t chmod $descr_file: $!&quot;</span><span class="p">;</span>
    <span class="k">print</span> <span class="s">&quot;[done]\n&quot;</span><span class="p">;</span>    
  <span class="p">}</span>
<span class="p"></span>
<span class="p">}</span>
<span class="p"></span>
<span class="p"></span>
<span class="c1">##########</span>
<span class="c1"># Fixes FAST toolbox files</span>
<span class="p"></span>
<span class="k">sub </span><span class="nf">fix_fasttb</span> <span class="p">{</span>
    <span class="k">my</span> <span class="nv">$pathname</span> <span class="o">=</span> <span class="nb">shift</span><span class="p">;</span>
    <span class="k">my</span> <span class="nv">$dir</span>  <span class="o">=</span> <span class="n">dirname</span><span class="p">(</span><span class="nv">$pathname</span><span class="p">);</span>
    <span class="k">my</span> <span class="nv">$file</span> <span class="o">=</span> <span class="n">basename</span><span class="p">(</span><span class="nv">$pathname</span><span class="p">);</span>
    <span class="k">my</span> <span class="nv">$dat_file</span> <span class="o">=</span> <span class="nv">$file</span><span class="p">;</span>
    <span class="nv">$dat_file</span> <span class="o">=~</span> <span class="sr">s%(.mat)$%.dat%</span><span class="p">;</span>
    <span class="k">my</span> <span class="nv">$dat_pathname</span> <span class="o">=</span> <span class="n">catdir</span><span class="p">(</span><span class="nv">$dir</span><span class="p">,</span> <span class="nv">$dat_file</span><span class="p">);</span>
    <span class="k">my</span> <span class="nv">$spm8_path</span> <span class="o">=</span> <span class="nv">$somsds_cfg</span><span class="o">-&gt;</span><span class="n">val</span><span class="p">(</span><span class="s">&#39;dependencies&#39;</span><span class="p">,</span> <span class="s">&#39;spm8&#39;</span><span class="p">);</span>
    <span class="k">my</span> <span class="nv">$cmd</span> <span class="o">=</span> <span class="s">&#39;matlab -nosplash -nodisplay -r &quot;try, cd(\&#39;&#39;</span><span class="o">.</span><span class="nv">$dir</span><span class="o">.</span><span class="s">&#39;\&#39;);&#39;</span><span class="o">.</span>
      <span class="s">&#39;addpath(genpath(\&#39;&#39;</span><span class="o">.</span><span class="nv">$spm8_path</span><span class="o">.</span><span class="s">&#39;\&#39;));&#39;</span><span class="o">.</span>
      <span class="s">&#39;load(\&#39;&#39;</span><span class="o">.</span><span class="nv">$file</span><span class="o">.</span><span class="s">&#39;\&#39;);&#39;</span><span class="o">.</span>
      <span class="s">&#39;D.path=\&#39;&#39;</span><span class="o">.</span><span class="nv">$dir</span><span class="o">.</span><span class="s">&#39;\&#39;;&#39;</span><span class="o">.</span>
      <span class="s">&#39;D.fname=\&#39;&#39;</span><span class="o">.</span><span class="nv">$file</span><span class="o">.</span><span class="s">&#39;\&#39;;&#39;</span><span class="o">.</span>
      <span class="s">&#39;D.data.fnamedat=\&#39;&#39;</span><span class="o">.</span><span class="nv">$dat_file</span><span class="o">.</span><span class="s">&#39;\&#39;;&#39;</span><span class="o">.</span>
      <span class="s">&#39;D.data.y.fname=\&#39;&#39;</span><span class="o">.</span><span class="nv">$dat_pathname</span><span class="o">.</span><span class="s">&#39;\&#39;;&#39;</span><span class="o">.</span>
      <span class="s">&#39;save(\&#39;&#39;</span><span class="o">.</span><span class="nv">$file</span><span class="o">.</span><span class="s">&#39;\&#39;,\&#39;D\&#39;);&#39;</span><span class="o">.</span>
      <span class="s">&#39;exit;&#39;</span><span class="o">.</span>
      <span class="s">&#39;catch, &#39;</span><span class="o">.</span>
      <span class="s">&#39;exit;end&quot;&#39;</span><span class="p">;</span>
    <span class="sb">`$cmd`</span><span class="p">;</span>
    <span class="sb">`stty echo`</span><span class="p">;</span> <span class="c1"># For some reason loading $files screws with the terminal echo</span>
    <span class="c1">#return;</span>
<span class="p">}</span>
<span class="p"></span>
<span class="p"></span>
<span class="p"></span>
<span class="p"></span>
<span class="c1">################################################################# PUBLIC METHODS</span>
<span class="p"></span>
<span class="c1"># Generates symbolic link names using the file properties (subject, mod, etc..)</span>
<span class="k">sub </span><span class="nf">link_name</span> <span class="p">{</span>
  <span class="k">my</span> <span class="nv">$self</span>          <span class="o">=</span> <span class="nb">shift</span><span class="p">;</span>
  <span class="k">my</span> <span class="nv">$link_name</span>     <span class="o">=</span> <span class="nb">shift</span> <span class="o">||</span> <span class="nv">$somsds_cfg</span><span class="o">-&gt;</span><span class="n">val</span><span class="p">(</span><span class="s">&#39;link&#39;</span><span class="p">,</span> <span class="s">&#39;name&#39;</span><span class="p">);</span>
  <span class="k">my</span> <span class="nv">$path_pattern</span>  <span class="o">=</span> <span class="nb">shift</span> <span class="o">||</span> <span class="nv">$somsds_cfg</span><span class="o">-&gt;</span><span class="n">val</span><span class="p">(</span><span class="s">&#39;link&#39;</span><span class="p">,</span> <span class="s">&#39;path&#39;</span><span class="p">);</span>
  <span class="k">my</span> <span class="nv">$sep</span>           <span class="o">=</span> <span class="nb">shift</span> <span class="o">||</span> <span class="nv">$somsds_cfg</span><span class="o">-&gt;</span><span class="n">val</span><span class="p">(</span><span class="s">&#39;link&#39;</span><span class="p">,</span> <span class="s">&#39;field_sep&#39;</span><span class="p">);</span>
  <span class="k">my</span> <span class="nv">$space</span>         <span class="o">=</span> <span class="nb">shift</span> <span class="o">||</span> <span class="nv">$somsds_cfg</span><span class="o">-&gt;</span><span class="n">val</span><span class="p">(</span><span class="s">&#39;link&#39;</span><span class="p">,</span> <span class="s">&#39;space_char&#39;</span><span class="p">);</span>
  <span class="k">my</span> <span class="nv">$rec</span>       <span class="o">=</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">recording</span><span class="p">};</span>
  <span class="k">my</span> <span class="nv">$subject</span>   <span class="o">=</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">subject</span><span class="p">};</span>
  <span class="k">my</span> <span class="nv">$modality</span>  <span class="o">=</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">modality</span><span class="p">};</span>
  <span class="k">my</span> <span class="nv">$technique</span> <span class="o">=</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">technique</span><span class="p">}</span>  <span class="o">||</span> <span class="s">&#39;&#39;</span><span class="p">;</span>
  <span class="k">my</span> <span class="nv">$device</span>    <span class="o">=</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">device</span><span class="p">}</span>     <span class="o">||</span> <span class="s">&#39;&#39;</span><span class="p">;</span>
  <span class="k">my</span> <span class="nv">$condition</span> <span class="o">=</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">condition</span><span class="p">}</span>  <span class="o">||</span> <span class="s">&#39;&#39;</span><span class="p">;</span>
  <span class="k">my</span> <span class="nv">$session</span>   <span class="o">=</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">session</span><span class="p">}</span>    <span class="o">||</span> <span class="s">&#39;&#39;</span><span class="p">;</span>
  <span class="k">my</span> <span class="nv">$block</span>     <span class="o">=</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">block</span><span class="p">}</span>      <span class="o">||</span> <span class="s">&#39;&#39;</span><span class="p">;</span> 
  <span class="k">my</span> <span class="nv">$meta</span>      <span class="o">=</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">meta</span><span class="p">}</span>       <span class="o">||</span> <span class="s">&#39;&#39;</span><span class="p">;</span>
  <span class="nv">$meta</span> <span class="o">=~</span> <span class="sr">s/[;._\s]/-/g</span><span class="p">;</span>
    <span class="k">unless</span> <span class="p">(</span><span class="nv">$rec</span><span class="p">){</span>
        <span class="nb">die</span> <span class="s">&quot;No recording specified for file $self-&gt;{id}\n&quot;</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p"></span>
  <span class="k">unless</span> <span class="p">(</span><span class="nv">$subject</span><span class="p">){</span>
    <span class="nb">die</span> <span class="s">&quot;No subject specified for file $self-&gt;{id}\n&quot;</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p"></span>
  <span class="k">unless</span> <span class="p">(</span><span class="nv">$modality</span><span class="p">){</span>
    <span class="nb">die</span> <span class="s">&quot;No modality specified for file $self-&gt;{id}\n&quot;</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p"></span>
<span class="p"></span>
  <span class="c1"># Replace field separator characters that appear within a field</span>
  <span class="k">for</span> <span class="k">my</span> <span class="nv">$field</span> <span class="p">(</span> <span class="o">\</span><span class="nv">$subject</span><span class="p">,</span> <span class="o">\</span><span class="nv">$modality</span><span class="p">,</span> <span class="o">\</span><span class="nv">$condition</span><span class="p">,</span> <span class="o">\</span><span class="nv">$session</span><span class="p">,</span> <span class="o">\</span><span class="nv">$block</span><span class="p">,</span> 
            <span class="o">\</span><span class="nv">$meta</span><span class="p">,</span> <span class="o">\</span><span class="nv">$technique</span><span class="p">,</span> <span class="o">\</span><span class="nv">$device</span><span class="p">){</span>
<span class="p"></span>
    <span class="nv">$$field</span> <span class="o">=~</span> <span class="sr">s/$sep/$space/g</span><span class="p">;</span>
    <span class="nv">$$field</span> <span class="o">=~</span> <span class="sr">s/\s+/$space/g</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p"></span>
  <span class="c1"># Directory where the links will be located</span>
  <span class="k">my</span> <span class="nv">$path</span>      <span class="o">=</span> <span class="nv">$path_pattern</span><span class="p">;</span>
  <span class="k">my</span> <span class="nv">@path</span>      <span class="o">=</span> <span class="nb">split</span><span class="p">(</span><span class="s">&quot;\n&quot;</span><span class="p">,</span> <span class="nv">$path</span><span class="p">);</span>
  <span class="nv">$path</span>         <span class="o">=</span> <span class="nv">$path</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
  <span class="nv">$path</span>         <span class="o">=~</span> <span class="sr">s/SUBJID/$subject/g</span><span class="p">;</span>
  <span class="nv">$path</span>         <span class="o">=~</span> <span class="sr">s/MODID/$modality/g</span><span class="p">;</span>
  <span class="nv">$path</span>         <span class="o">=~</span> <span class="sr">s/DEVID/$device/g</span><span class="p">;</span>
  <span class="nv">$path</span>         <span class="o">=~</span> <span class="sr">s/TECID/$technique/g</span><span class="p">;</span>
  <span class="nv">$path</span>         <span class="o">=~</span> <span class="sr">s/CONDID/$condition/g</span><span class="p">;</span>
  <span class="nv">$path</span>         <span class="o">=~</span> <span class="sr">s/SESSID/$session/g</span><span class="p">;</span>
  <span class="nv">$path</span>         <span class="o">=~</span> <span class="sr">s/BLKID/$block/g</span><span class="p">;</span>
  <span class="nv">$path</span>         <span class="o">=~</span> <span class="sr">s/META/$meta/g</span><span class="p">;</span>
  <span class="nv">$path</span>         <span class="o">=</span> <span class="n">catdir</span><span class="p">(</span> <span class="nv">$somsds_cfg</span><span class="o">-&gt;</span><span class="n">val</span><span class="p">(</span><span class="s">&#39;somsds&#39;</span><span class="p">,</span> <span class="s">&#39;root_path&#39;</span><span class="p">),</span>
                          <span class="nv">$somsds_cfg</span><span class="o">-&gt;</span><span class="n">val</span><span class="p">(</span><span class="s">&#39;somsds&#39;</span><span class="p">,</span> <span class="s">&#39;rec_folder&#39;</span><span class="p">),</span>
                          <span class="nv">$rec</span><span class="p">,</span>
                          <span class="nb">split</span><span class="p">(</span><span class="sr">/\s+/</span><span class="p">,</span><span class="nv">$path</span><span class="p">));</span>
<span class="c1">#print $somsds_cfg-&gt;val(&#39;somsds&#39;, &#39;root_path&#39;),&quot;\n&quot;;</span>
<span class="c1">#  $path = catdir($somsds_cfg-&gt;{root_path}, $somsds_cfg-&gt;{rec_folder}, $path);</span>
  <span class="nv">$link_name</span>         <span class="o">=~</span> <span class="sr">s/RECID/$rec/g</span><span class="p">;</span>
  <span class="nv">$link_name</span>         <span class="o">=~</span> <span class="sr">s/SUBJID/$subject/g</span><span class="p">;</span>
  <span class="nv">$link_name</span>         <span class="o">=~</span> <span class="sr">s/MODID/$modality/g</span><span class="p">;</span>
  <span class="nv">$link_name</span>         <span class="o">=~</span> <span class="sr">s/DEVID/$device/g</span><span class="p">;</span>
  <span class="nv">$link_name</span>         <span class="o">=~</span> <span class="sr">s/TECID/$technique/g</span><span class="p">;</span>
  <span class="nv">$link_name</span>         <span class="o">=~</span> <span class="sr">s/CONDID/$condition/g</span><span class="p">;</span>
  <span class="nv">$link_name</span>         <span class="o">=~</span> <span class="sr">s/SESSID/$session/g</span><span class="p">;</span>
  <span class="nv">$link_name</span>         <span class="o">=~</span> <span class="sr">s/BLKID/$block/g</span><span class="p">;</span>
  <span class="nv">$link_name</span>         <span class="o">=~</span> <span class="sr">s/META/$meta/g</span><span class="p">;</span>
  <span class="nv">$link_name</span>         <span class="o">=~</span> <span class="sr">s/(\s+)/$sep/g</span><span class="p">;</span>
  <span class="nv">$link_name</span>         <span class="o">=~</span> <span class="sr">s/($sep+)$//</span><span class="p">;</span>
<span class="p"></span>
  <span class="c1"># Attach the file extension to the link name</span>
  <span class="k">my</span> <span class="nv">$file_ext</span><span class="p">;</span>
  <span class="k">if</span> <span class="p">(</span><span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">id</span><span class="p">}</span> <span class="o">=~</span> <span class="sr">m/.+\.nii\.gz$/</span><span class="p">){</span>
    <span class="nv">$file_ext</span> <span class="o">=</span> <span class="s">&quot;.nii.gz&quot;</span><span class="p">;</span>
  <span class="p">}</span><span class="k">else</span><span class="p">{</span>
    <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">id</span><span class="p">}</span> <span class="o">=~</span> <span class="sr">m%.+(\.[^/]+)$%</span><span class="p">;</span>
    <span class="nv">$file_ext</span> <span class="o">=</span> <span class="nv">$1</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p"></span>
  <span class="nv">$link_name</span> <span class="o">=</span> <span class="n">catfile</span><span class="p">(</span><span class="nv">$path</span><span class="p">,</span><span class="nv">$link_name</span><span class="o">.</span><span class="nv">$file_ext</span><span class="p">);</span>   
<span class="p">}</span>
<span class="p"></span>
<span class="c1">###################</span>
<span class="p"></span>
<span class="k">sub </span><span class="nf">filename</span> <span class="p">{</span>
  <span class="k">my</span> <span class="nv">$self</span> <span class="o">=</span> <span class="nb">shift</span><span class="p">;</span>
  <span class="k">return</span> <span class="n">abs_path</span> <span class="n">catdir</span><span class="p">(</span><span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">root_path</span><span class="p">},</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">id</span><span class="p">});</span>
<span class="p">}</span>
<span class="p"></span>
<span class="p"></span>
<span class="k">sub </span><span class="nf">_class_autoload</span> <span class="p">{</span>
  <span class="k">my</span> <span class="p">(</span><span class="nv">$name</span><span class="p">,</span> <span class="nv">$force_type</span><span class="p">,</span> <span class="nv">$self</span><span class="p">,</span> <span class="nv">$value</span><span class="p">)</span> <span class="o">=</span> <span class="p">(</span><span class="nb">shift</span><span class="p">,</span> <span class="nb">shift</span><span class="p">,</span> <span class="nb">shift</span><span class="p">,</span> <span class="nb">shift</span><span class="p">);</span>
  <span class="k">my</span> <span class="nv">$type</span> <span class="o">=</span> <span class="nb">ref</span><span class="p">(</span><span class="nv">$self</span><span class="p">)</span> <span class="ow">or</span> <span class="n">croak</span> <span class="s">&quot;$self is not an object&quot;</span><span class="p">;</span>
  <span class="nv">$name</span> <span class="o">=~</span> <span class="sr">s/.*://</span><span class="p">;</span>   <span class="c1"># strip fully-qualified portion</span>
<span class="p"></span>
  <span class="k">unless</span> <span class="p">(</span><span class="nb">exists</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">_permitted</span><span class="p">}</span><span class="o">-&gt;</span><span class="p">{</span><span class="nv">$name</span><span class="p">})</span> <span class="p">{</span>
    <span class="n">croak</span> <span class="s">&quot;Can&#39;t access &#39;$name&#39; field in class $type&quot;</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p"></span>
  <span class="k">if</span> <span class="p">(</span><span class="nv">$value</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">unless</span> <span class="p">(</span><span class="nb">ref</span><span class="p">(</span><span class="nv">$value</span><span class="p">)</span> <span class="ow">eq</span> <span class="nv">$force_type</span><span class="p">)</span> <span class="p">{</span>
      <span class="n">croak</span> <span class="s">&quot;$self is not an object of class $force_type!&quot;</span>    
    <span class="p">}</span>
    <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="nv">$name</span><span class="p">}</span> <span class="o">=</span> <span class="nv">$value</span><span class="p">;</span>
    <span class="k">return</span> <span class="nv">$self</span><span class="p">;</span>
  <span class="p">}</span>
  <span class="k">return</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="nv">$name</span><span class="p">};</span>
<span class="p">}</span>
<span class="p"></span>
<span class="k">sub </span><span class="nf">save</span> <span class="p">{</span>
  <span class="k">my</span> <span class="p">(</span><span class="nv">$self</span><span class="p">,</span> <span class="nv">$somsds_obj</span><span class="p">)</span> <span class="o">=</span> <span class="p">(</span><span class="nb">shift</span><span class="p">,</span> <span class="nb">shift</span><span class="p">);</span>
  <span class="k">my</span> <span class="nv">$files_table</span> <span class="o">=</span> <span class="nv">$somsds_cfg</span><span class="o">-&gt;</span><span class="n">val</span><span class="p">(</span><span class="s">&#39;somsds&#39;</span><span class="p">,</span> <span class="s">&#39;files_csv&#39;</span><span class="p">);</span>
  <span class="nv">$files_table</span> <span class="o">=~</span> <span class="sr">s/\..*$//</span><span class="p">;</span>
<span class="p"></span>
  <span class="c1"># We assume that all files from this recordings have been removed  </span>
  <span class="k">my</span> <span class="nv">$query</span> <span class="o">=</span> <span class="s">&quot;INSERT INTO $files_table VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)&quot;</span><span class="p">;</span>
  <span class="k">my</span> <span class="nv">$file_id</span> <span class="o">=</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="n">id</span><span class="p">();</span>
  <span class="k">my</span> <span class="nv">$uname</span> <span class="o">=</span> <span class="nb">getpwuid</span><span class="p">(</span> <span class="vg">$&lt;</span> <span class="p">);</span>  
  <span class="k">my</span> <span class="nv">@entry</span> <span class="o">=</span> <span class="p">(</span> <span class="nv">$file_id</span><span class="p">,</span>
                <span class="nv">$uname</span><span class="p">,</span> 
                <span class="nv">$time</span><span class="p">{</span><span class="s">&#39;yyyy/mm/ddThh:mm:ss&#39;</span><span class="p">},</span>
                <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">recording</span><span class="p">},</span>
                <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">subject</span><span class="p">},</span>                
                <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">sex</span><span class="p">},</span>
                <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">age</span><span class="p">},</span>
                <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">group</span><span class="p">},</span>
                <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">modality</span><span class="p">},</span>
                <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">device</span><span class="p">},</span>
                <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">technique</span><span class="p">},</span>
                <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">condition</span><span class="p">},</span>
                <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">session</span><span class="p">},</span>
                <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">block</span><span class="p">},</span>
                                <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">meta</span><span class="p">}</span>
                <span class="p">);</span>
<span class="p"></span>
<span class="c1">#print join(&#39;,&#39;,@entry);die;</span>
  <span class="nv">$somsds_obj</span><span class="o">-&gt;</span><span class="n">sql</span><span class="p">(</span><span class="nv">$query</span><span class="p">,</span> <span class="nb">undef</span><span class="p">,</span> <span class="nv">@entry</span><span class="p">);</span>
<span class="p"></span>
<span class="p">}</span>
<span class="p"></span>
<span class="p"></span>
<span class="c1">######################################################### PRIVATE HELPER METHODS</span>
<span class="p"></span>
<span class="p"></span>
<span class="c1"># Helper function for public static method descriptors()</span>
<span class="k">sub </span><span class="nf">_describe_file</span> <span class="p">{</span>
    <span class="k">my</span> <span class="p">(</span><span class="nv">$regexp</span><span class="p">,</span> <span class="nv">$ini</span><span class="p">,</span> <span class="nv">$root</span><span class="p">)</span> <span class="o">=</span> <span class="p">(</span><span class="nb">shift</span><span class="p">,</span> <span class="nb">shift</span><span class="p">,</span> <span class="nb">shift</span><span class="p">);</span>
    <span class="c1"># Another parameter for valid file extensions within a modality!!!</span>
    <span class="c1"># If it is not a valid extension, skip</span>
    <span class="k">my</span> <span class="nv">$file_regexp</span> <span class="o">=</span> <span class="nv">$regexp</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">file_id</span><span class="p">};</span>
  <span class="k">my</span> <span class="nv">$fname</span> <span class="o">=</span> <span class="nv">$</span><span class="nn">File::Find::</span><span class="nv">name</span><span class="p">;</span>
  <span class="nv">$fname</span> <span class="o">=</span> <span class="nn">File::</span><span class="n">Spec</span><span class="o">-&gt;</span><span class="n">abs2rel</span><span class="p">(</span><span class="nv">$fname</span><span class="p">,</span> <span class="nv">$root</span><span class="p">);</span> 
<span class="p"></span>
    <span class="k">return</span> <span class="k">unless</span> <span class="p">(</span><span class="nv">$file_regexp</span> <span class="o">&amp;&amp;</span> <span class="nv">$fname</span> <span class="o">=~</span> <span class="n">m</span><span class="o">&amp;</span><span class="nv">$file_regexp</span><span class="o">&amp;</span><span class="p">);</span>
    <span class="c1"># Try to find out subject, mod, cond, sess, block and make an entry in the</span>
    <span class="c1"># descriptor file</span>
<span class="p"></span>
    <span class="k">print</span> <span class="n">CSVFILE</span> <span class="sx">qq[&quot;$fname&quot;,]</span><span class="p">;</span>
    <span class="k">foreach</span> <span class="p">(</span><span class="sx">qw(subject_id modality_id device_id technique_id condition_id </span>
<span class="sx">              session_id block_id meta_id)</span><span class="p">){</span>
        <span class="k">my</span> <span class="nv">$this_regexp</span> <span class="o">=</span> <span class="nv">$regexp</span><span class="o">-&gt;</span><span class="p">{</span><span class="nv">$_</span><span class="p">};</span>
<span class="p"></span>
        <span class="k">my</span> <span class="nv">$new_value</span> <span class="o">=</span> <span class="nv">$fname</span><span class="p">;</span>
        <span class="k">if</span> <span class="p">(</span><span class="nv">$this_regexp</span><span class="p">)</span> <span class="p">{</span>
            <span class="nb">eval</span><span class="p">(</span><span class="s">&#39;$new_value =~&#39;</span><span class="o">.</span><span class="s">&quot;$this_regexp;&quot;</span><span class="p">);</span>  
            <span class="k">if</span> <span class="p">(</span><span class="nv">$new_value</span> <span class="ow">eq</span> <span class="nv">$fname</span><span class="p">){</span>
                <span class="nv">$new_value</span> <span class="o">=</span> <span class="s">&#39;&#39;</span><span class="p">;</span>
            <span class="p">}</span><span class="k">else</span><span class="p">{</span>
                <span class="k">if</span> <span class="p">(</span><span class="nv">$ini</span><span class="o">-&gt;</span><span class="n">val</span><span class="p">(</span><span class="nv">$_</span><span class="o">.</span><span class="s">&#39;_map&#39;</span><span class="p">,</span> <span class="nv">$new_value</span><span class="p">)){</span>          
                    <span class="c1"># Translate the value</span>
                    <span class="nv">$new_value</span> <span class="o">=</span> <span class="nv">$ini</span><span class="o">-&gt;</span><span class="n">val</span><span class="p">(</span><span class="nv">$_</span><span class="o">.</span><span class="s">&#39;_map&#39;</span><span class="p">,</span> <span class="nv">$new_value</span><span class="p">);</span>   
                <span class="p">}</span>
        <span class="c1"># Remove separator characters</span>
        <span class="k">my</span> <span class="nv">$field_sep</span> <span class="o">=</span> <span class="nv">$somsds_cfg</span><span class="o">-&gt;</span><span class="n">val</span><span class="p">(</span><span class="s">&#39;link&#39;</span><span class="p">,</span><span class="s">&#39;field_sep&#39;</span><span class="p">);</span>
        <span class="k">my</span> <span class="nv">$space_char</span> <span class="o">=</span> <span class="nv">$somsds_cfg</span><span class="o">-&gt;</span><span class="n">val</span><span class="p">(</span><span class="s">&#39;link&#39;</span><span class="p">,</span><span class="s">&#39;space_char&#39;</span><span class="p">);</span>
        <span class="nv">$new_value</span> <span class="o">=~</span> <span class="sr">s/$field_sep/$space_char/g</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span><span class="k">else</span><span class="p">{</span>
            <span class="nb">undef</span> <span class="nv">$new_value</span><span class="p">;</span>    
        <span class="p">}</span>
        <span class="k">if</span> <span class="p">(</span><span class="nv">$new_value</span><span class="p">)</span> <span class="p">{</span>
      <span class="nv">$new_value</span> <span class="o">=~</span> <span class="sr">s/\s+/-/g</span><span class="p">;</span>  
      <span class="nv">$new_value</span> <span class="o">=~</span> <span class="sr">s/_+/-/g</span><span class="p">;</span>
            <span class="k">print</span> <span class="n">CSVFILE</span> <span class="sx">qq[&quot;$new_value&quot;,]</span><span class="p">;</span>
        <span class="p">}</span><span class="k">else</span><span class="p">{</span>
            <span class="k">print</span> <span class="n">CSVFILE</span> <span class="s">&quot;,&quot;</span><span class="p">;</span>
        <span class="p">};</span>
    <span class="p">}</span>
<span class="p"></span>
    <span class="k">print</span> <span class="n">CSVFILE</span> <span class="s">&quot;\n&quot;</span><span class="p">;</span>
<span class="p">}</span>
<span class="p"></span>
<span class="p"></span>
<span class="c1">#####################</span>
<span class="p"></span>
<span class="k">sub </span><span class="nf">AUTOLOAD</span> <span class="p">{</span>
  <span class="k">my</span> <span class="nv">$self</span> <span class="o">=</span> <span class="nb">shift</span><span class="p">;</span>
  <span class="k">my</span> <span class="nv">$type</span> <span class="o">=</span> <span class="nb">ref</span><span class="p">(</span><span class="nv">$self</span><span class="p">)</span> <span class="ow">or</span> 
    <span class="n">croak</span> <span class="s">&quot;$self is not an object\n&quot;</span><span class="p">;</span>   
  <span class="k">my</span> <span class="nv">$name</span> <span class="o">=</span> <span class="nv">$AUTOLOAD</span><span class="p">;</span>
  <span class="nv">$name</span> <span class="o">=~</span> <span class="sr">s/.*://</span><span class="p">;</span>
  <span class="k">unless</span> <span class="p">(</span><span class="nb">exists</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">_permitted</span><span class="p">}</span><span class="o">-&gt;</span><span class="p">{</span><span class="nv">$name</span><span class="p">}){</span>
    <span class="n">croak</span> <span class="s">&quot;Can&#39;t access $name field in class $type\n&quot;</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p"></span>
  <span class="k">if</span> <span class="p">(</span><span class="nv">@_</span><span class="p">){</span>
    <span class="k">return</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="nv">$name</span><span class="p">}</span> <span class="o">=</span> <span class="nb">shift</span><span class="p">;</span>
  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
    <span class="k">return</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="nv">$name</span><span class="p">};</span>
  <span class="p">}</span>
<span class="p">}</span>
<span class="p"></span>
<span class="p"></span>
<span class="k">sub </span><span class="nf">DESTROY</span> <span class="p">{</span>
<span class="p"></span>
<span class="p">}</span>
<span class="p"></span>
<span class="mi">1</span><span class="p">;</span>
<span class="cp">__END__</span>
<span class="cp"># Below is stub documentation for your module. You&#39;d better edit it!</span>
<span class="p"></span>
<span class="cp">=head1 NAME</span>
<span class="p"></span>
<span class="cp">SOMSDS - Perl extension for blah blah blah</span>
<span class="p"></span>
<span class="cp">=head1 SYNOPSIS</span>
<span class="p"></span>
<span class="cp">  use SOMSDS;</span>
<span class="cp">  blah blah blah</span>
<span class="p"></span>
<span class="cp">=head1 DESCRIPTION</span>
<span class="p"></span>
<span class="cp">Stub documentation for SOMSDS, created by h2xs. It looks like the</span>
<span class="cp">author of the extension was negligent enough to leave the stub</span>
<span class="cp">unedited.</span>
<span class="p"></span>
<span class="cp">Blah blah blah.</span>
<span class="p"></span>
<span class="cp">=head2 EXPORT</span>
<span class="p"></span>
<span class="cp">None by default.</span>
<span class="p"></span>
<span class="p"></span>
<span class="p"></span>
<span class="cp">=head1 SEE ALSO</span>
<span class="p"></span>
<span class="cp">Mention other useful documentation such as the documentation of</span>
<span class="cp">related modules or operating system documentation (such as man pages</span>
<span class="cp">in UNIX), or any relevant external documentation such as RFCs or</span>
<span class="cp">standards.</span>
<span class="p"></span>
<span class="cp">If you have a mailing list set up for your module, mention it here.</span>
<span class="p"></span>
<span class="cp">If you have a web site set up for your module, mention it here.</span>
<span class="p"></span>
<span class="cp">=head1 AUTHOR</span>
<span class="p"></span>
<span class="cp">Germán, E&lt;lt&gt;german.gomezherrero@kasku.orgE&lt;gt&gt;</span>
<span class="p"></span>
<span class="cp">=head1 COPYRIGHT AND LICENSE</span>
<span class="p"></span>
<span class="cp">Copyright (C) 2011 by German Gomez-Herrero</span>
<span class="p"></span>
<span class="cp">This library is free software; you can redistribute it and/or modify</span>
<span class="cp">it under the same terms as Perl itself, either Perl version 5.14.1 or,</span>
<span class="cp">at your option, any later version of Perl 5 you may have available.</span>
<span class="p"></span>
<span class="p"></span>
<span class="cp">=cut</span>
</pre></div>

<p><span class="p"></span></p>
</div>
<div id="footer">
<p><a href="http://kaba.hilvi.org/remark">Remark</a> documentation system - Page generated 26.03.2012 15:40.</p>
</div>
</div>
</body>
</html>
