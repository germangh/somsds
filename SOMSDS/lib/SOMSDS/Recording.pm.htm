<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en-US" lang="en-US">
<head>
<title>Recording class</title>
<link rel="stylesheet" type="text/css" href="../../../remark_files/remark.css" />
<link rel="stylesheet" type="text/css" href="../../../remark_files/pygments.css" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8"></meta>
</head>
<body>
<div id = "container">
<div id = "remark">
<h1>Recording.pm</h1>
<p><a href="../modules.htm">Back to User-defined classes</a></p>
<p><a href="directory.htm">SOMSDS/lib/SOMSDS/</a></p>
<div class="highlight"><pre><span class="c1">#!/usr/bin/perl</span>
<span class="c1"># (c) German Gomez-Herrero, g.gomez@nin.knaw.nl</span>
<span class="p"></span>
<span class="c1"># Description: Recording class</span>
<span class="c1"># Documentation: modules.txt</span>
<span class="p"></span>
<span class="nb">package</span> <span class="n">Recording</span><span class="p">;</span>
<span class="p"></span>
<span class="k">use</span> <span class="n">Carp</span><span class="p">;</span>
<span class="k">use</span> <span class="n">Cwd</span> <span class="sx">qw(abs_path cwd)</span><span class="p">;</span>
<span class="k">use</span> <span class="nn">List::</span><span class="n">MoreUtils</span> <span class="sx">qw(any)</span><span class="p">;</span>
<span class="k">use</span> <span class="nn">Config::</span><span class="n">IniFiles</span><span class="p">;</span>
<span class="k">use</span> <span class="nn">File::Spec::</span><span class="n">Functions</span><span class="p">;</span>
<span class="k">use</span> <span class="nn">File::</span><span class="n">Path</span> <span class="sx">qw(make_path)</span><span class="p">;</span>
<span class="k">use</span> <span class="nn">File::</span><span class="n">Find</span><span class="p">;</span>
<span class="k">use</span> <span class="nn">Time::</span><span class="n">Format</span> <span class="sx">qw(%time)</span><span class="p">;</span>
<span class="k">use</span> <span class="n">Fcntl</span> <span class="s">&#39;:mode&#39;</span><span class="p">;</span>
<span class="p"></span>
<span class="c1">#use 5.014001;</span>
<span class="k">use</span> <span class="n">strict</span><span class="p">;</span>
<span class="k">use</span> <span class="n">warnings</span><span class="p">;</span>
<span class="p"></span>
<span class="nb">require</span> <span class="n">Exporter</span><span class="p">;</span>
<span class="p"></span>
<span class="k">our</span> <span class="nv">@ISA</span> <span class="o">=</span> <span class="sx">qw(Exporter)</span><span class="p">;</span>
<span class="p"></span>
<span class="c1"># Items to export into callers namespace by default. Note: do not export</span>
<span class="c1"># names by default without a very good reason. Use EXPORT_OK instead.</span>
<span class="c1"># Do not simply export all your public functions/methods/constants.</span>
<span class="p"></span>
<span class="p"></span>
<span class="k">our</span> <span class="nv">@EXPORT_OK</span> <span class="o">=</span> <span class="p">(</span> <span class="s">&#39;new&#39;</span> <span class="p">);</span>
<span class="p"></span>
<span class="k">our</span> <span class="nv">@EXPORT</span> <span class="o">=</span> <span class="sx">qw(</span>
<span class="sx">   new</span>
<span class="sx">)</span><span class="p">;</span>
<span class="p"></span>
<span class="k">our</span> <span class="nv">$VERSION</span> <span class="o">=</span> <span class="s">&#39;0.01&#39;</span><span class="p">;</span>
<span class="p"></span>
<span class="k">our</span> <span class="nv">$AUTOLOAD</span><span class="p">;</span>
<span class="p"></span>
<span class="p"></span>
<span class="c1"># Read SOMSDS configuration options</span>
<span class="k">my</span> <span class="p">(</span><span class="nv">$vol</span><span class="p">,</span> <span class="nv">$dir</span><span class="p">,</span> <span class="nv">$file</span><span class="p">)</span> <span class="o">=</span> <span class="nn">File::</span><span class="n">Spec</span><span class="o">-&gt;</span><span class="n">splitpath</span><span class="p">(</span><span class="nv">$0</span><span class="p">);</span>
<span class="c1">#print &quot;$vol --- $dir --- $file\n&quot;; die;</span>
<span class="k">my</span> <span class="nv">$somsds_file</span><span class="p">;</span>
<span class="k">if</span> <span class="p">(</span><span class="nv">$vol</span><span class="p">){</span>
  <span class="nv">$somsds_file</span>        <span class="o">=</span> <span class="n">abs_path</span> <span class="n">catfile</span><span class="p">(</span><span class="nv">$vol</span><span class="p">,</span> <span class="nv">$dir</span><span class="p">,</span> <span class="s">&#39;SOMSDS.ini&#39;</span><span class="p">);</span> 
<span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
  <span class="nv">$somsds_file</span>        <span class="o">=</span> <span class="n">abs_path</span> <span class="n">catfile</span><span class="p">(</span><span class="nv">$dir</span><span class="p">,</span> <span class="s">&#39;SOMSDS.ini&#39;</span><span class="p">);</span> 
<span class="p">}</span>
<span class="p"></span>
<span class="k">unless</span> <span class="p">(</span><span class="o">-</span><span class="n">e</span> <span class="nv">$somsds_file</span><span class="p">){</span>  
  <span class="nv">$somsds_file</span> <span class="o">=</span> <span class="s">&#39;/etc/SOMSDS.ini&#39;</span><span class="p">;</span> 
<span class="p">}</span> 
<span class="k">unless</span> <span class="p">(</span><span class="o">-</span><span class="n">e</span> <span class="nv">$somsds_file</span><span class="p">){</span>
  <span class="n">croak</span> <span class="s">&quot;I could not find the configuration file $somsds_file\n&quot;</span><span class="p">;</span>
<span class="p">}</span>
<span class="k">my</span> <span class="nv">$somsds_cfg</span> <span class="o">=</span> <span class="k">new</span> <span class="nn">Config::</span><span class="n">IniFiles</span><span class="p">(</span><span class="o">-</span><span class="n">file</span> <span class="o">=&gt;</span> <span class="nv">$somsds_file</span><span class="p">);</span>
<span class="p"></span>
<span class="p"></span>
<span class="c1">########################################################## PUBLIC STATIC METHODS</span>
<span class="p"></span>
<span class="p"></span>
<span class="k">sub </span><span class="nf">new</span> <span class="p">{</span>
  <span class="k">my</span> <span class="nv">$class</span>         <span class="o">=</span> <span class="nb">shift</span><span class="p">;</span>
  <span class="k">my</span> <span class="nv">$settings_file</span> <span class="o">=</span> <span class="nb">shift</span><span class="p">;</span>
  <span class="k">my</span> <span class="nv">$options</span>       <span class="o">=</span> <span class="nb">shift</span><span class="p">;</span>
  <span class="k">my</span> <span class="nv">%fields</span> <span class="o">=</span> <span class="p">(</span>
    <span class="n">id</span>          <span class="o">=&gt;</span> <span class="nb">undef</span><span class="p">,</span>
    <span class="n">root_path</span>   <span class="o">=&gt;</span> <span class="nb">undef</span><span class="p">,</span>
    <span class="n">archived</span>    <span class="o">=&gt;</span> <span class="nb">undef</span><span class="p">,</span>   
    <span class="n">file</span>        <span class="o">=&gt;</span> <span class="p">{},</span>
    <span class="n">subject</span>     <span class="o">=&gt;</span> <span class="p">{},</span>  
    <span class="n">modality</span>    <span class="o">=&gt;</span> <span class="p">{},</span>
    <span class="n">condition</span>   <span class="o">=&gt;</span> <span class="p">{},</span>
    <span class="n">technique</span>   <span class="o">=&gt;</span> <span class="p">{},</span>
    <span class="n">device</span>      <span class="o">=&gt;</span> <span class="p">{},</span>
    <span class="n">session</span>     <span class="o">=&gt;</span> <span class="p">{},</span>
    <span class="n">block</span>       <span class="o">=&gt;</span> <span class="p">{},</span>
    <span class="n">settings</span>       <span class="o">=&gt;</span> <span class="nb">undef</span><span class="p">,</span>
    <span class="n">settings_file</span>  <span class="o">=&gt;</span> <span class="nb">undef</span><span class="p">,</span>
    <span class="n">meta</span>        <span class="o">=&gt;</span> <span class="p">{}</span> 
  <span class="p">);</span>
  <span class="k">my</span> <span class="nv">$self</span> <span class="o">=</span> <span class="p">{</span>    
    <span class="n">_permitted</span>      <span class="o">=&gt;</span> <span class="o">\</span><span class="nv">%fields</span><span class="p">,</span>
    <span class="nv">%fields</span><span class="p">,</span>
  <span class="p">};</span>    
<span class="p"></span>
  <span class="c1"># Load recording settings </span>
  <span class="k">unless</span> <span class="p">(</span><span class="nv">$settings_file</span> <span class="o">&amp;&amp;</span> <span class="o">-</span><span class="n">e</span> <span class="nv">$settings_file</span><span class="p">){</span>
    <span class="nb">die</span> <span class="s">&quot;I could not find the recording settings file $settings_file\n&quot;</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p"></span>
  <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">settings</span><span class="p">}</span> <span class="o">=</span> <span class="k">new</span> <span class="nn">Config::</span><span class="n">IniFiles</span><span class="p">(</span><span class="o">-</span><span class="n">file</span> <span class="o">=&gt;</span> <span class="nv">$settings_file</span><span class="p">);</span>
  <span class="c1">#unless ($settings_file =~ m|^/|){</span>
  <span class="c1">#  $settings_file = abs_path catfile(cwd(), $settings_file);</span>
  <span class="c1">#}</span>
<span class="p"></span>
  <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">settings_file</span><span class="p">}</span> <span class="o">=</span> <span class="nv">$settings_file</span><span class="p">;</span>
  <span class="k">my</span> <span class="nv">@recid</span> <span class="o">=</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">settings</span><span class="p">}</span><span class="o">-&gt;</span><span class="n">GroupMembers</span><span class="p">(</span><span class="s">&#39;recording&#39;</span><span class="p">);</span>
  <span class="k">unless</span> <span class="p">(</span><span class="nv">@recid</span><span class="p">){</span>
    <span class="n">croak</span> <span class="s">&quot;Recording ID is missing from file $settings_file\n&quot;</span><span class="p">;</span>
  <span class="p">}</span>
  <span class="k">if</span> <span class="p">(</span><span class="nb">scalar</span> <span class="nv">@recid</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">){</span>
    <span class="n">croak</span> <span class="s">&quot;Found multiple recording IDs in $settings_file: &quot;</span><span class="p">,</span> <span class="nv">@recid</span><span class="p">,</span> <span class="s">&quot;\n&quot;</span><span class="p">;</span>
  <span class="p">}</span>
  <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">id</span><span class="p">}</span> <span class="o">=</span> <span class="nb">shift</span> <span class="nv">@recid</span><span class="p">;</span>
  <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">id</span><span class="p">}</span> <span class="o">=~</span> <span class="sr">s/recording\s+//</span><span class="p">;</span>
<span class="p"></span>
  <span class="c1"># Read recording meta-information</span>
  <span class="k">my</span> <span class="nv">$sec</span> <span class="o">=</span> <span class="s">&#39;recording &#39;</span><span class="o">.</span><span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">id</span><span class="p">};</span>
  <span class="k">foreach</span> <span class="p">(</span><span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">settings</span><span class="p">}</span><span class="o">-&gt;</span><span class="n">Parameters</span><span class="p">(</span><span class="nv">$sec</span><span class="p">)){</span>
    <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">meta</span><span class="p">}</span><span class="o">-&gt;</span><span class="p">{</span><span class="nv">$_</span><span class="p">}</span> <span class="o">=</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">settings</span><span class="p">}</span><span class="o">-&gt;</span><span class="n">val</span><span class="p">(</span><span class="nv">$sec</span><span class="p">,</span> <span class="nv">$_</span><span class="p">);</span>
  <span class="p">}</span>  
<span class="p"></span>
  <span class="c1"># Load recording settings</span>
  <span class="k">for</span> <span class="k">my</span> <span class="nv">$group</span> <span class="p">(</span><span class="sx">qw(subject modality device technique device session block condition)</span><span class="p">){</span>
    <span class="k">for</span> <span class="k">my</span> <span class="nv">$group_member</span> <span class="p">(</span><span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">settings</span><span class="p">}</span><span class="o">-&gt;</span><span class="n">GroupMembers</span><span class="p">(</span><span class="nv">$group</span><span class="p">)){</span>
<span class="p"></span>
      <span class="k">if</span> <span class="p">((</span><span class="n">any</span> <span class="p">{</span><span class="nv">$_</span> <span class="ow">eq</span> <span class="nv">$group</span><span class="p">}</span> <span class="sx">qw(modality device technique)</span><span class="p">)</span> <span class="o">&amp;&amp;</span>
                <span class="o">!</span><span class="nv">$somsds_cfg</span><span class="o">-&gt;</span><span class="n">SectionExists</span><span class="p">(</span><span class="s">&quot;$group_member&quot;</span><span class="p">)){</span>
        <span class="n">croak</span> <span class="s">&quot;$group_member is not listed in $somsds_file\n&quot;</span><span class="p">;</span>
      <span class="p">}</span>
      <span class="k">my</span> <span class="nv">$group_member_name</span> <span class="o">=</span> <span class="nv">$group_member</span><span class="p">;</span>
      <span class="nv">$group_member_name</span> <span class="o">=~</span> <span class="sr">s/$group\s+//</span><span class="p">;</span>
      <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="nv">$group</span><span class="p">}</span><span class="o">-&gt;</span><span class="p">{</span><span class="nv">$group_member_name</span><span class="p">}</span> <span class="o">=</span> <span class="p">{};</span>
      <span class="k">for</span> <span class="k">my</span> <span class="nv">$param</span> <span class="p">(</span><span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">settings</span><span class="p">}</span><span class="o">-&gt;</span><span class="n">Parameters</span><span class="p">(</span><span class="s">&quot;$group_member&quot;</span><span class="p">)){</span>     
        <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="nv">$group</span><span class="p">}</span><span class="o">-&gt;</span><span class="p">{</span><span class="nv">$group_member_name</span><span class="p">}</span><span class="o">-&gt;</span><span class="p">{</span><span class="nv">$param</span><span class="p">}</span> <span class="o">=</span> 
          <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">settings</span><span class="p">}</span><span class="o">-&gt;</span><span class="n">val</span><span class="p">(</span><span class="s">&quot;$group_member&quot;</span><span class="p">,</span> <span class="nv">$param</span><span class="p">);</span>
      <span class="p">}</span>
    <span class="p">}</span>
  <span class="p">}</span>
<span class="p"></span>
<span class="p"></span>
  <span class="c1"># There must be at least one modality and one subject</span>
  <span class="k">for</span> <span class="p">(</span><span class="sx">qw(modality subject)</span><span class="p">){</span>
    <span class="k">unless</span> <span class="p">(</span><span class="nb">keys</span> <span class="nv">%</span><span class="p">{</span><span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="nv">$_</span><span class="p">}}){</span>
      <span class="n">croak</span> <span class="s">&quot;At least one $_ must be specified in $settings_file\n&quot;</span><span class="p">;</span>
    <span class="p">}</span>
  <span class="p">}</span>    
<span class="p"></span>
  <span class="nb">bless</span> <span class="nv">$self</span><span class="p">,</span> <span class="nv">$class</span><span class="p">;</span>
<span class="p"></span>
  <span class="c1"># Create the folder structure  </span>
  <span class="k">if</span> <span class="p">(</span><span class="nb">exists</span><span class="p">(</span><span class="nv">$options</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">tmp</span><span class="p">})</span> <span class="o">&amp;&amp;</span> <span class="nv">$options</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">tmp</span><span class="p">})</span> <span class="p">{</span>
      <span class="nv">$self</span><span class="o">-&gt;</span><span class="n">root_path</span><span class="p">(</span><span class="n">catdir</span><span class="p">(</span><span class="n">cwd</span><span class="p">(),</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">id</span><span class="p">}));</span>
<span class="p"></span>
  <span class="p">}</span><span class="k">else</span> <span class="p">{</span>
    <span class="c1"># The root path of the recording</span>
    <span class="nv">$self</span><span class="o">-&gt;</span><span class="n">root_path</span><span class="p">(</span>
                  <span class="n">catdir</span><span class="p">(</span><span class="nv">$somsds_cfg</span><span class="o">-&gt;</span><span class="n">val</span><span class="p">(</span><span class="s">&#39;somsds&#39;</span><span class="p">,</span> <span class="s">&#39;root_path&#39;</span><span class="p">),</span>
                         <span class="nv">$somsds_cfg</span><span class="o">-&gt;</span><span class="n">val</span><span class="p">(</span><span class="s">&#39;somsds&#39;</span><span class="p">,</span> <span class="s">&#39;rec_folder&#39;</span><span class="p">),</span> 
                         <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">id</span><span class="p">})</span>
                <span class="p">);</span>
  <span class="p">}</span>
<span class="p"></span>
  <span class="c1"># If there are multiple input ids</span>
  <span class="k">if</span> <span class="p">(</span><span class="nv">@_</span><span class="p">){</span>
    <span class="k">my</span> <span class="nv">@self</span> <span class="o">=</span> <span class="p">(</span><span class="nv">$self</span><span class="p">);</span>
    <span class="k">while</span> <span class="p">(</span><span class="k">my</span> <span class="nv">$id</span> <span class="o">=</span> <span class="nb">shift</span><span class="p">){</span>
      <span class="k">my</span> <span class="nv">$new_rec</span> <span class="o">=</span> <span class="n">Recording</span><span class="o">-&gt;</span><span class="k">new</span><span class="p">(</span><span class="nv">$id</span><span class="p">);</span>
      <span class="nv">@self</span> <span class="o">=</span> <span class="nb">push</span> <span class="nv">@self</span><span class="p">,</span> <span class="nv">$new_rec</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="nv">@self</span><span class="p">;</span>
  <span class="p">}</span>  
<span class="p"></span>
  <span class="k">return</span> <span class="nv">$self</span><span class="p">;</span>
<span class="p">}</span>  
<span class="p"></span>
<span class="p"></span>
<span class="c1">#################################</span>
<span class="p"></span>
<span class="p"></span>
<span class="k">sub </span><span class="nf">string_as_meta</span> <span class="p">{</span>
  <span class="k">my</span> <span class="nv">$str</span> <span class="o">=</span> <span class="nb">shift</span><span class="p">;</span>
  <span class="k">my</span> <span class="nv">%meta</span><span class="p">;</span>
  <span class="k">my</span> <span class="nv">@str</span> <span class="o">=</span> <span class="nb">split</span><span class="p">(</span><span class="sr">/\s;\s/</span><span class="p">,</span> <span class="nv">$str</span><span class="p">);</span>
  <span class="k">foreach</span> <span class="p">(</span><span class="nv">@str</span><span class="p">){</span>
    <span class="k">my</span> <span class="p">(</span><span class="nv">$key</span><span class="p">,</span> <span class="nv">$value</span><span class="p">)</span> <span class="o">=</span> <span class="nb">split</span><span class="p">(</span><span class="sr">/\s:\s/</span><span class="p">,</span> <span class="nv">$_</span><span class="p">);</span>
    <span class="nv">$meta</span><span class="p">{</span><span class="nv">$key</span><span class="p">}</span><span class="o">=</span><span class="nv">$value</span><span class="p">;</span>
  <span class="p">}</span>
  <span class="o">\</span><span class="nv">%meta</span><span class="p">;</span>
<span class="p">}</span>
<span class="p"></span>
<span class="c1">#################################</span>
<span class="p"></span>
<span class="c1"># prints the meta attribute (to introduce it in a .csv table)</span>
<span class="k">sub </span><span class="nf">meta_as_string</span> <span class="p">{</span>
  <span class="k">my</span> <span class="nv">$meta</span> <span class="o">=</span> <span class="nb">shift</span><span class="p">;</span>
  <span class="k">my</span> <span class="nv">$out_str</span> <span class="o">=</span> <span class="s">&#39;&#39;</span><span class="p">;</span>
  <span class="k">while</span> <span class="p">(</span><span class="k">my</span> <span class="p">(</span><span class="nv">$key</span><span class="p">,</span> <span class="nv">$value</span><span class="p">)</span> <span class="o">=</span> <span class="nb">each</span> <span class="nv">%</span><span class="p">{</span><span class="nv">$meta</span><span class="p">}){</span>
    <span class="k">if</span> <span class="p">(</span><span class="nv">$value</span><span class="p">)</span> <span class="p">{</span><span class="nv">$out_str</span> <span class="o">=</span> <span class="nv">$out_str</span><span class="o">.</span><span class="s">&quot;$key : $value ; &quot;</span><span class="p">;}</span>
  <span class="p">}</span>
  <span class="nv">$out_str</span><span class="p">;</span>
<span class="p">}</span>
<span class="p"></span>
<span class="c1">#################################</span>
<span class="p"></span>
<span class="c1"># Imports data from a directory tree into a recording</span>
<span class="k">sub </span><span class="nf">import_dir</span> <span class="p">{</span>
  <span class="k">my</span> <span class="p">(</span><span class="nv">$self</span><span class="p">,</span> <span class="nv">$dir</span><span class="p">,</span> <span class="nv">$fuse</span><span class="p">)</span>     <span class="o">=</span> <span class="p">(</span><span class="nb">shift</span><span class="p">,</span> <span class="nb">shift</span><span class="p">,</span> <span class="nb">shift</span><span class="p">);</span>
  <span class="k">my</span> <span class="nv">$conf_file</span> <span class="o">=</span> <span class="nb">shift</span><span class="p">;</span>
<span class="p"></span>
  <span class="nv">$dir</span> <span class="o">=~</span> <span class="n">s</span><span class="o">&amp;/</span><span class="vg">$&amp;</span><span class="o">&amp;</span><span class="p">;</span>
<span class="p"></span>
  <span class="k">my</span> <span class="nv">$conf</span> <span class="o">=</span> <span class="k">new</span> <span class="nn">Config::</span><span class="n">IniFiles</span><span class="p">(</span><span class="o">-</span><span class="n">file</span> <span class="o">=&gt;</span> <span class="nv">$conf_file</span><span class="p">);</span>
<span class="p"></span>
  <span class="k">my</span> <span class="nv">$inc_regex</span> <span class="o">=</span> <span class="nv">$conf</span><span class="o">-&gt;</span><span class="n">val</span><span class="p">(</span><span class="s">&#39;include&#39;</span><span class="p">,</span> <span class="s">&#39;regexp&#39;</span><span class="p">);</span> 
  <span class="k">my</span> <span class="nv">$exc_regex</span> <span class="o">=</span> <span class="nv">$conf</span><span class="o">-&gt;</span><span class="n">val</span><span class="p">(</span><span class="s">&#39;exclude&#39;</span><span class="p">,</span> <span class="s">&#39;regexp&#39;</span><span class="p">);</span>    
<span class="p"></span>
    <span class="nv">$conf_file</span> <span class="o">=~</span> <span class="sr">s/.[^.]+$//</span><span class="p">;</span>
  <span class="k">if</span> <span class="p">(</span><span class="nv">$fuse</span><span class="p">){</span>
    <span class="c1"># Copy $dir into recordings/$rec/</span>
    <span class="n">dircopy</span><span class="p">(</span><span class="nv">$dir</span><span class="p">,</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">root_path</span><span class="p">});</span>
  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>  
    <span class="k">if</span> <span class="p">(</span><span class="nv">$inc_regex</span><span class="p">)</span> <span class="p">{</span><span class="nv">$inc_regex</span> <span class="o">=~</span> <span class="sr">s/^&quot;(.+)&quot;$/$1/</span><span class="p">;}</span>
    <span class="k">if</span> <span class="p">(</span><span class="nv">$exc_regex</span><span class="p">)</span> <span class="p">{</span><span class="nv">$exc_regex</span> <span class="o">=~</span> <span class="sr">s/^&quot;(.+)&quot;$/$1/</span><span class="p">;}</span>
    <span class="k">my</span> <span class="nv">$import_dir</span>  <span class="o">=</span> <span class="n">catdir</span><span class="p">(</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">root_path</span><span class="p">},</span> 
                              <span class="nv">$somsds_cfg</span><span class="o">-&gt;</span><span class="n">val</span><span class="p">(</span><span class="s">&#39;somsds&#39;</span><span class="p">,</span> <span class="s">&#39;import_folder&#39;</span><span class="p">),</span>
                                                            <span class="nv">$conf_file</span><span class="o">.</span><span class="s">&quot;_&quot;</span><span class="o">.</span><span class="nv">$time</span><span class="p">{</span><span class="s">&#39;yyyy-mm-dd_hh-mm-ss&#39;</span><span class="p">});</span>
<span class="p"></span>
    <span class="c1"># Copy $dir into $rec/imported/$date/ </span>
    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$inc_regex</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="nv">$exc_regex</span><span class="p">){</span>
      <span class="k">print</span> <span class="s">&quot;$dir\n---&gt;&gt;$import_dir\n&quot;</span><span class="p">;</span>
      <span class="n">dircopy</span><span class="p">(</span><span class="nv">$dir</span><span class="p">,</span> <span class="nv">$import_dir</span><span class="p">);</span>  
      <span class="n">finddepth</span><span class="p">(</span><span class="n">sub</span><span class="p">{</span><span class="nb">rmdir</span><span class="p">},</span> <span class="nv">$import_dir</span><span class="p">);</span>     
    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
      <span class="k">my</span> <span class="nv">$count</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>    
      <span class="n">find</span><span class="p">(</span><span class="k">sub </span>
<span class="k">      </span><span class="p">{</span>
          <span class="k">if</span> <span class="p">(</span><span class="nv">$inc_regex</span><span class="p">)</span> <span class="p">{</span><span class="k">return</span> <span class="k">unless</span> <span class="p">(</span><span class="nv">$</span><span class="nn">File::Find::</span><span class="nv">name</span> <span class="o">=~</span> <span class="sr">m/$inc_regex/</span><span class="p">);}</span>
        <span class="k">if</span> <span class="p">(</span><span class="nv">$exc_regex</span><span class="p">)</span> <span class="p">{</span><span class="k">return</span> <span class="k">if</span> <span class="p">(</span><span class="nv">$</span><span class="nn">File::Find::</span><span class="nv">name</span> <span class="o">=~</span> <span class="sr">m/$exc_regex/</span><span class="p">);}</span>
        <span class="nv">$count</span><span class="o">++</span><span class="p">;</span>
<span class="p"></span>
        <span class="c1"># Copy the file to the new location</span>
        <span class="k">my</span> <span class="nv">$import_file</span> <span class="o">=</span> <span class="nv">$</span><span class="nn">File::Find::</span><span class="nv">name</span><span class="p">;</span>
        <span class="nv">$import_file</span> <span class="o">=~</span> <span class="n">s</span><span class="o">&amp;</span><span class="nv">$dir</span><span class="o">&amp;</span><span class="nv">$import_dir</span><span class="o">&amp;</span><span class="p">;</span>   
<span class="p"></span>
        <span class="k">print</span> <span class="s">&quot;$File::Find::name \n---&gt; $import_file\n\n&quot;</span><span class="p">;</span><span class="vg">$|</span><span class="o">++</span><span class="p">;</span>
<span class="p"></span>
        <span class="k">if</span> <span class="p">(</span><span class="o">-</span><span class="n">d</span> <span class="nv">$</span><span class="nn">File::Find::</span><span class="nv">name</span><span class="p">){</span>
          <span class="n">make_path</span> <span class="nv">$import_file</span>
        <span class="p">}</span><span class="k">else</span><span class="p">{</span>
          <span class="nv">$import_file</span> <span class="o">=~</span> <span class="sr">m%(.+)/[^/]+$%</span><span class="p">;</span>
          <span class="k">if</span> <span class="p">(</span><span class="nv">$1</span><span class="p">)</span> <span class="p">{</span><span class="n">make_path</span> <span class="nv">$1</span><span class="p">;}</span>  
                        <span class="c1">#print &quot;$File::Find::name \n---&gt; $import_file\n\n&quot;;$|++;</span>
            <span class="sb">`cp $File::Find::name $import_file`</span><span class="p">;</span><span class="c1"># || die &quot;$!&quot;;</span>
        <span class="p">}</span>    
<span class="p"></span>
        <span class="nb">chmod</span> <span class="p">(</span><span class="mo">0755</span><span class="p">,</span> <span class="nv">$import_file</span><span class="p">);</span>
      <span class="p">},</span>
      <span class="nv">$dir</span><span class="p">);</span>
      <span class="k">print</span> <span class="s">&quot;$count files were copied int $import_dir\n&quot;</span>             
    <span class="p">}</span> <span class="c1"># endif</span>
  <span class="p">}</span>
<span class="p"></span>
<span class="p"></span>
<span class="p">}</span>
<span class="p"></span>
<span class="p"></span>
<span class="c1">################################################################# PUBLIC METHODS</span>
<span class="p"></span>
<span class="p"></span>
<span class="k">sub </span><span class="nf">root_path</span> <span class="p">{</span>
  <span class="k">my</span> <span class="p">(</span><span class="nv">$self</span><span class="p">,</span> <span class="nv">$path</span><span class="p">)</span> <span class="o">=</span> <span class="p">(</span><span class="nb">shift</span><span class="p">,</span> <span class="nb">shift</span><span class="p">);</span>
  <span class="k">if</span> <span class="p">(</span><span class="nv">$path</span><span class="p">)</span> <span class="p">{</span>    
    <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">root_path</span><span class="p">}</span> <span class="o">=</span> <span class="nv">$path</span><span class="p">;</span>
    <span class="k">return</span> <span class="nv">$self</span><span class="p">;</span>
  <span class="p">}</span>
  <span class="k">return</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">root_path</span><span class="p">};</span>
<span class="p">}</span>
<span class="p"></span>
<span class="c1">#################################</span>
<span class="p"></span>
<span class="k">sub </span><span class="nf">protect</span> <span class="p">{</span>
  <span class="k">my</span> <span class="nv">$self</span> <span class="o">=</span> <span class="nb">shift</span><span class="p">;</span>
  <span class="k">my</span> <span class="nv">$dir</span> <span class="o">=</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="n">root_path</span><span class="p">();</span>
  <span class="k">print</span> <span class="s">&quot;Changing permissions to 0555 for folder $dir...&quot;</span><span class="p">;</span> <span class="vg">$|</span><span class="o">++</span><span class="p">;</span>
  <span class="n">find</span><span class="p">(</span><span class="k">sub </span>
<span class="k">    </span><span class="p">{</span>     
        <span class="nb">chmod</span> <span class="mo">0555</span><span class="p">,</span> <span class="nv">$</span><span class="nn">File::Find::</span><span class="nv">name</span> <span class="ow">or</span> <span class="nb">warn</span> <span class="s">&quot;Coudn&#39;t chmod $File::Find::name: $!\n&quot;</span><span class="p">;</span>
    <span class="p">},</span>
    <span class="nv">$dir</span>
  <span class="p">);</span>
  <span class="k">print</span> <span class="s">&quot;[done]\n&quot;</span><span class="p">;</span> 
<span class="p">}</span>
<span class="p"></span>
<span class="p"></span>
<span class="c1">#################################</span>
<span class="p"></span>
<span class="k">sub </span><span class="nf">unprotect</span> <span class="p">{</span>
  <span class="k">my</span> <span class="nv">$self</span>        <span class="o">=</span> <span class="nb">shift</span><span class="p">;</span>
    <span class="k">my</span> <span class="nv">$permissions</span> <span class="o">=</span> <span class="nb">shift</span> <span class="o">||</span> <span class="mo">0755</span><span class="p">;</span>
<span class="p"></span>
  <span class="k">my</span> <span class="nv">$dir</span> <span class="o">=</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="n">root_path</span><span class="p">();</span>
  <span class="nb">printf</span> <span class="s">&quot;Changing permissions to 0%o&quot;</span><span class="p">,</span> <span class="nv">$permissions</span><span class="p">;</span>
  <span class="k">print</span>  <span class="s">&quot; for folder $dir...&quot;</span><span class="p">;</span> <span class="vg">$|</span><span class="o">++</span><span class="p">;</span>
  <span class="n">find</span><span class="p">(</span><span class="k">sub </span>
<span class="k">    </span><span class="p">{</span>       
        <span class="nb">chmod</span> <span class="nv">$permissions</span><span class="p">,</span> <span class="nv">$</span><span class="nn">File::Find::</span><span class="nv">name</span> <span class="ow">or</span> <span class="nb">die</span> <span class="s">&quot;Coudn&#39;t chmod $File::Find::name: $!&quot;</span><span class="p">;</span>
    <span class="p">},</span>
   <span class="nv">$dir</span>
  <span class="p">);</span>
  <span class="k">print</span> <span class="s">&quot;[done]\n&quot;</span><span class="p">;</span> 
<span class="p">}</span>
<span class="p"></span>
<span class="p"></span>
<span class="p"></span>
<span class="p"></span>
<span class="c1">#################################</span>
<span class="p"></span>
<span class="p"></span>
<span class="k">sub </span><span class="nf">make_folders</span> <span class="p">{</span>
  <span class="k">my</span> <span class="nv">$self</span> <span class="o">=</span> <span class="nb">shift</span><span class="p">;</span>
  <span class="k">my</span> <span class="nv">$responsible</span> <span class="o">=</span> <span class="nb">getpwuid</span><span class="p">(</span> <span class="vg">$&lt;</span> <span class="p">);</span>
  <span class="k">if</span> <span class="p">(</span><span class="nb">exists</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">meta</span><span class="p">}</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">responsible</span><span class="p">}){</span>
    <span class="nv">$responsible</span> <span class="o">=</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">meta</span><span class="p">}</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">responsible</span><span class="p">};</span>
    <span class="nv">$responsible</span> <span class="o">=</span> <span class="nb">getpwnam</span><span class="p">(</span><span class="nv">$responsible</span><span class="p">);</span>
  <span class="p">}</span>  
<span class="p"></span>
  <span class="k">for</span> <span class="p">(</span><span class="sx">qw(subject modality condition device session block)</span><span class="p">){</span>
        <span class="k">unless</span> <span class="p">(</span><span class="nb">keys</span> <span class="nv">%</span><span class="p">{</span><span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="nv">$_</span><span class="p">}}){</span>
            <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="nv">$_</span><span class="p">}</span><span class="o">-&gt;</span><span class="p">{</span><span class="s">&#39;&#39;</span><span class="p">}</span> <span class="o">=</span> <span class="nb">undef</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
  <span class="k">my</span> <span class="nv">$path</span><span class="p">;</span>
  <span class="k">for</span> <span class="k">my</span> <span class="nv">$subjid</span> <span class="p">(</span><span class="nb">keys</span> <span class="nv">%</span><span class="p">{</span><span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">subject</span><span class="p">}}){</span>
    <span class="k">for</span> <span class="k">my</span> <span class="nv">$modid</span> <span class="p">(</span><span class="nb">keys</span> <span class="nv">%</span><span class="p">{</span><span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">modality</span><span class="p">}}){</span>
      <span class="k">for</span> <span class="k">my</span> <span class="nv">$condid</span> <span class="p">(</span><span class="nb">keys</span> <span class="nv">%</span><span class="p">{</span><span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">condition</span><span class="p">}}){</span>
        <span class="k">for</span> <span class="k">my</span> <span class="nv">$devid</span> <span class="p">(</span><span class="nb">keys</span> <span class="nv">%</span><span class="p">{</span><span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">device</span><span class="p">}}){</span>
          <span class="k">for</span> <span class="k">my</span> <span class="nv">$sessid</span> <span class="p">(</span><span class="nb">keys</span> <span class="nv">%</span><span class="p">{</span><span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">session</span><span class="p">}}){</span>
            <span class="k">for</span> <span class="k">my</span> <span class="nv">$blkid</span> <span class="p">(</span><span class="nb">keys</span> <span class="nv">%</span><span class="p">{</span><span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">block</span><span class="p">}}){</span>              
              <span class="nv">$path</span>         <span class="o">=</span> <span class="nv">$somsds_cfg</span><span class="o">-&gt;</span><span class="n">val</span><span class="p">(</span><span class="s">&#39;recording&#39;</span><span class="p">,</span><span class="s">&#39;folders&#39;</span><span class="p">);</span>
              <span class="nv">$path</span>         <span class="o">=~</span> <span class="sr">s/SUBJID/$subjid/g</span><span class="p">;</span>
              <span class="nv">$path</span>         <span class="o">=~</span> <span class="sr">s/MODID/$modid/g</span><span class="p">;</span>
              <span class="nv">$path</span>         <span class="o">=~</span> <span class="sr">s/CONDID/$condid/g</span><span class="p">;</span>
              <span class="nv">$path</span>         <span class="o">=~</span> <span class="sr">s/CONDID/$devid/g</span><span class="p">;</span>              
              <span class="nv">$path</span>         <span class="o">=~</span> <span class="sr">s/SESSID/$sessid/g</span><span class="p">;</span>
              <span class="nv">$path</span>         <span class="o">=~</span> <span class="sr">s/BLKID/$blkid/g</span><span class="p">;</span>
              <span class="k">my</span> <span class="nv">@paths</span> <span class="o">=</span> <span class="nb">split</span><span class="p">(</span><span class="s">&quot;\n&quot;</span><span class="p">,</span> <span class="nv">$path</span><span class="p">);</span>
<span class="p"></span>
              <span class="k">foreach</span> <span class="p">(</span><span class="nv">@paths</span><span class="p">){</span>
                <span class="k">my</span> <span class="nv">$options</span>   <span class="o">=</span> <span class="p">{</span> <span class="n">mode</span> <span class="o">=&gt;</span> <span class="mo">0755</span><span class="p">,</span> <span class="n">verbose</span> <span class="o">=&gt;</span> <span class="mi">1</span><span class="p">,</span> 
                                  <span class="n">owner</span> <span class="o">=&gt;</span> <span class="nv">$responsible</span><span class="p">};</span>
                <span class="k">my</span> <span class="nv">$new_path</span>  <span class="o">=</span> <span class="n">catdir</span><span class="p">(</span><span class="nv">$self</span><span class="o">-&gt;</span><span class="n">root_path</span><span class="p">(),</span> <span class="nb">split</span><span class="p">(</span><span class="sr">/\s+/</span><span class="p">,</span> <span class="nv">$_</span><span class="p">));</span>                      
                <span class="k">unless</span> <span class="p">(</span><span class="o">-</span><span class="n">e</span> <span class="nv">$new_path</span><span class="p">){</span>
                    <span class="n">make_path</span> <span class="nv">$new_path</span><span class="p">,</span> <span class="nv">$options</span><span class="p">;</span>  
                    <span class="c1">#print &quot;mkdir $new_path\n&quot;;                                             </span>
                <span class="p">}</span>
<span class="p"></span>
<span class="p"></span>
              <span class="p">}</span>
            <span class="p">}</span>
          <span class="p">}</span>
        <span class="p">}</span>
      <span class="p">}</span>
    <span class="p">}</span>
  <span class="p">}</span>
<span class="p"></span>
  <span class="nb">chown</span> <span class="nv">$responsible</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="n">root_path</span><span class="p">();</span>
<span class="p">}</span>
<span class="p"></span>
<span class="p"></span>
<span class="c1">#################################</span>
<span class="p"></span>
<span class="k">sub </span><span class="nf">prune</span> <span class="p">{</span>
  <span class="k">my</span> <span class="nv">$self</span>   <span class="o">=</span> <span class="nb">shift</span><span class="p">;</span>
    <span class="k">my</span> <span class="nv">$doc</span>  <span class="o">=</span> <span class="nb">shift</span><span class="p">;</span> <span class="c1"># Remove doc directories?</span>
  <span class="k">my</span> <span class="nv">$dir_tree</span> <span class="o">=</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">root_path</span><span class="p">};</span>
  <span class="k">print</span> <span class="s">&quot;Pruning directory tree: &quot;</span><span class="p">,</span><span class="nv">$dir_tree</span><span class="p">,</span> <span class="s">&quot; ...&quot;</span><span class="p">;</span>
    <span class="k">if</span> <span class="p">(</span><span class="nv">$doc</span><span class="p">){</span>
      <span class="n">finddepth</span><span class="p">(</span><span class="n">sub</span><span class="p">{</span><span class="nb">rmdir</span><span class="p">;},</span> <span class="nv">$dir_tree</span><span class="p">);</span>
    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
    <span class="n">finddepth</span><span class="p">(</span><span class="n">sub</span><span class="p">{</span>
                  <span class="k">unless</span> <span class="p">(</span><span class="sr">m%(doc/|raw/)%</span><span class="p">){</span>     
                  <span class="nb">rmdir</span><span class="p">;</span>
                  <span class="p">}</span>
                 <span class="p">},</span> <span class="nv">$dir_tree</span><span class="p">);</span>
    <span class="p">}</span>
  <span class="k">print</span> <span class="s">&quot;[done]\n&quot;</span><span class="p">;</span>
<span class="p">}</span>
<span class="p"></span>
<span class="c1">#################################</span>
<span class="p"></span>
<span class="k">sub </span><span class="nf">clear_links</span> <span class="p">{</span>
  <span class="k">my</span> <span class="nv">$self</span> <span class="o">=</span> <span class="nb">shift</span><span class="p">;</span>
  <span class="n">find</span><span class="p">(</span><span class="k">sub</span>
<span class="k">    </span><span class="p">{</span>
      <span class="k">if</span> <span class="p">(</span><span class="nv">$</span><span class="nn">File::Find::</span><span class="nv">name</span> <span class="o">=~</span> <span class="n">m</span><span class="o">|</span><span class="nb">import</span><span class="o">/|</span><span class="p">)</span> <span class="p">{</span><span class="k">return</span><span class="p">;}</span>
      <span class="k">if</span> <span class="p">(</span><span class="nv">$</span><span class="nn">File::Find::</span><span class="nv">name</span> <span class="o">=~</span> <span class="sr">m%^.+/raw/.+\..+$%</span><span class="p">){</span>
        <span class="nb">unlink</span> <span class="nv">$</span><span class="nn">File::Find::</span><span class="nv">name</span><span class="p">;</span>
        <span class="k">print</span> <span class="s">&quot;unlink $File::Find::name\n&quot;</span><span class="p">;</span>
      <span class="p">}</span>
    <span class="p">},</span> 
    <span class="n">catdir</span><span class="p">(</span><span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">root_path</span><span class="p">},</span> <span class="s">&#39;subjects&#39;</span><span class="p">));</span>
<span class="p">}</span>
<span class="p"></span>
<span class="c1">#################################</span>
<span class="p"></span>
<span class="k">sub </span><span class="nf">save</span> <span class="p">{</span>  
  <span class="k">my</span> <span class="p">(</span><span class="nv">$self</span><span class="p">,</span> <span class="nv">$somsds_obj</span><span class="p">)</span> <span class="o">=</span> <span class="p">(</span><span class="nb">shift</span><span class="p">,</span> <span class="nb">shift</span><span class="p">);</span>
  <span class="k">my</span> <span class="nv">$rec_table</span> <span class="o">=</span> <span class="nv">$somsds_obj</span><span class="o">-&gt;</span><span class="p">{</span><span class="s">&#39;rec_csv&#39;</span><span class="p">};</span>
  <span class="nv">$rec_table</span> <span class="o">=~</span> <span class="sr">s/\..*$//</span><span class="p">;</span>
  <span class="k">my</span> <span class="nv">$files_table</span> <span class="o">=</span> <span class="nv">$somsds_obj</span><span class="o">-&gt;</span><span class="p">{</span><span class="s">&#39;files_csv&#39;</span><span class="p">};;</span>
  <span class="nv">$files_table</span> <span class="o">=~</span> <span class="sr">s/\..*$//</span><span class="p">;</span>
<span class="p"></span>
  <span class="c1"># Remove the recording from the table if it is already there</span>
  <span class="k">my</span> <span class="nv">$rec_id</span> <span class="o">=</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">id</span><span class="p">};</span>
  <span class="k">my</span> <span class="nv">$query</span> <span class="o">=</span> <span class="s">&quot;DELETE FROM $rec_table WHERE id=&#39;$rec_id&#39;&quot;</span><span class="p">;</span>
  <span class="nv">$somsds_obj</span><span class="o">-&gt;</span><span class="n">sql</span><span class="p">(</span><span class="nv">$query</span><span class="p">);</span>
  <span class="c1"># Insert the recording in the recordings table</span>
  <span class="nv">$query</span> <span class="o">=</span> <span class="s">&quot;INSERT INTO $rec_table VALUES (?,?,?,?,?,?)&quot;</span><span class="p">;</span>
  <span class="k">my</span> <span class="nv">$uname</span> <span class="o">=</span> <span class="nb">getpwuid</span><span class="p">(</span> <span class="vg">$&lt;</span> <span class="p">);</span>
  <span class="k">my</span> <span class="nv">@entry</span> <span class="o">=</span> <span class="p">(</span> <span class="nv">$rec_id</span><span class="p">,</span>
                <span class="nv">$uname</span><span class="p">,</span> 
                <span class="nv">$time</span><span class="p">{</span><span class="s">&#39;yyyy/mm/ddThh:mm:ss&#39;</span><span class="p">},</span>
                <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">archived</span><span class="p">},</span>
                <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">settings_file</span><span class="p">},</span>
                <span class="n">meta_as_string</span><span class="p">(</span><span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">meta</span><span class="p">}),</span>
              <span class="p">);</span>
    <span class="nv">$somsds_obj</span><span class="o">-&gt;</span><span class="n">sql</span><span class="p">(</span><span class="nv">$query</span><span class="p">,</span> <span class="nb">undef</span><span class="p">,</span> <span class="nv">@entry</span><span class="p">);</span>        
<span class="p"></span>
    <span class="c1"># Insert files</span>
    <span class="k">my</span> <span class="nv">$counter</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
    <span class="k">my</span> <span class="nv">$num_files</span> <span class="o">=</span> <span class="nb">keys</span> <span class="nv">%</span><span class="p">{</span><span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">file</span><span class="p">}};</span>
<span class="p"></span>
    <span class="k">my</span> <span class="nv">$num_files_by100</span> <span class="o">=</span> <span class="nn">POSIX::</span><span class="n">ceil</span><span class="p">(</span><span class="nv">$num_files</span><span class="o">/</span><span class="mi">100</span><span class="p">);</span>    
<span class="p"></span>
    <span class="c1"># Remove all files from this recording</span>
    <span class="nv">$query</span> <span class="o">=</span> <span class="s">&quot;DELETE FROM $files_table WHERE recording=&#39;$rec_id&#39;&quot;</span><span class="p">;</span>
    <span class="nv">$somsds_obj</span><span class="o">-&gt;</span><span class="n">sql</span><span class="p">(</span><span class="nv">$query</span><span class="p">);</span> 
    <span class="k">while</span> <span class="p">(</span><span class="k">my</span> <span class="p">(</span><span class="nv">$file_id</span><span class="p">,</span> <span class="nv">$file_obj</span><span class="p">)</span> <span class="o">=</span> <span class="nb">each</span> <span class="nv">%</span><span class="p">{</span><span class="nv">$self</span><span class="o">-&gt;</span><span class="n">file</span><span class="p">()}){</span>
      <span class="nv">$file_obj</span><span class="o">-&gt;</span><span class="n">save</span><span class="p">(</span><span class="nv">$somsds_obj</span><span class="p">);</span>
      <span class="nv">$counter</span><span class="o">++</span><span class="p">;</span>
      <span class="k">unless</span> <span class="p">(</span><span class="nv">$counter</span> <span class="nv">%</span> <span class="err">$</span><span class="nv">num_files_by100</span> <span class="p">)</span> <span class="p">{</span>
        <span class="k">my</span> <span class="nv">$pctg</span> <span class="o">=</span> <span class="nn">POSIX::</span><span class="n">ceil</span><span class="p">(</span><span class="mi">100</span><span class="o">*</span><span class="nv">$counter</span><span class="o">/</span><span class="nv">$num_files</span><span class="p">);</span>
          <span class="k">print</span> <span class="s">&quot;Inserting files of recording &#39;$rec_id&#39; to the DB...$pctg%\r&quot;</span><span class="p">;</span>
        <span class="vg">$|</span><span class="o">++</span><span class="p">;</span>  
      <span class="p">}</span>      
    <span class="p">}</span>
    <span class="k">print</span> <span class="s">&quot;\n&quot;</span><span class="p">;</span>
<span class="p">}</span>
<span class="p"></span>
<span class="p"></span>
<span class="p"></span>
<span class="p"></span>
<span class="c1">#################################</span>
<span class="p"></span>
<span class="p"></span>
<span class="k">sub </span><span class="nf">file</span> <span class="p">{</span>
  <span class="n">_class_autoload</span><span class="p">(</span><span class="s">&#39;file&#39;</span><span class="p">,</span> <span class="s">&#39;File&#39;</span><span class="p">,</span> <span class="nv">@_</span><span class="p">);</span>
<span class="p">}</span>
<span class="p"></span>
<span class="k">sub </span><span class="nf">AUTOLOAD</span> <span class="p">{</span>
  <span class="k">my</span> <span class="nv">$self</span> <span class="o">=</span> <span class="nb">shift</span><span class="p">;</span>
  <span class="k">my</span> <span class="nv">$type</span> <span class="o">=</span> <span class="nb">ref</span><span class="p">(</span><span class="nv">$self</span><span class="p">)</span> <span class="ow">or</span> 
    <span class="n">croak</span> <span class="s">&quot;$self is not an object\n&quot;</span><span class="p">;</span>
<span class="p"></span>
  <span class="k">my</span> <span class="nv">$name</span> <span class="o">=</span> <span class="nv">$AUTOLOAD</span><span class="p">;</span>
  <span class="nv">$name</span> <span class="o">=~</span> <span class="sr">s/.*://</span><span class="p">;</span>
  <span class="k">unless</span> <span class="p">(</span><span class="nb">exists</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">_permitted</span><span class="p">}</span><span class="o">-&gt;</span><span class="p">{</span><span class="nv">$name</span><span class="p">}){</span>
    <span class="n">croak</span> <span class="s">&quot;Can&#39;t access $name field in class $type\n&quot;</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p"></span>
  <span class="k">if</span> <span class="p">(</span><span class="nv">@_</span><span class="p">){</span>
    <span class="k">return</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="nv">$name</span><span class="p">}</span> <span class="o">=</span> <span class="nb">shift</span><span class="p">;</span>
  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
    <span class="k">return</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="nv">$name</span><span class="p">};</span>
  <span class="p">}</span>
<span class="p">}</span>
<span class="p"></span>
<span class="p"></span>
<span class="k">sub </span><span class="nf">_class_autoload</span> <span class="p">{</span>
  <span class="k">my</span> <span class="p">(</span><span class="nv">$name</span><span class="p">,</span> <span class="nv">$force_type</span><span class="p">,</span> <span class="nv">$self</span><span class="p">)</span> <span class="o">=</span> <span class="p">(</span><span class="nb">shift</span><span class="p">,</span> <span class="nb">shift</span><span class="p">,</span> <span class="nb">shift</span><span class="p">);</span>
  <span class="k">my</span> <span class="nv">$type</span> <span class="o">=</span> <span class="nb">ref</span><span class="p">(</span><span class="nv">$self</span><span class="p">)</span> <span class="ow">or</span> <span class="n">croak</span> <span class="s">&quot;$self is not an object&quot;</span><span class="p">;</span>
  <span class="nv">$name</span> <span class="o">=~</span> <span class="sr">s/.*://</span><span class="p">;</span>   <span class="c1"># strip fully-qualified portion</span>
<span class="p"></span>
  <span class="k">unless</span> <span class="p">(</span><span class="nb">exists</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">_permitted</span><span class="p">}</span><span class="o">-&gt;</span><span class="p">{</span><span class="nv">$name</span><span class="p">})</span> <span class="p">{</span>
    <span class="n">croak</span> <span class="s">&quot;Can&#39;t access &#39;$name&#39; field in class $type&quot;</span><span class="p">;</span>
  <span class="p">}</span>  
<span class="p"></span>
  <span class="n">OBJECT:</span> <span class="k">while</span> <span class="p">(</span><span class="k">my</span> <span class="nv">$value</span> <span class="o">=</span> <span class="nb">shift</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="nb">ref</span><span class="p">(</span><span class="nv">$value</span><span class="p">)</span> <span class="ow">eq</span> <span class="nv">$force_type</span><span class="p">)</span> <span class="p">{</span>
      <span class="k">my</span> <span class="nv">$id</span> <span class="o">=</span> <span class="nv">$value</span><span class="o">-&gt;</span><span class="n">id</span><span class="p">()</span> <span class="o">||</span> <span class="k">next</span> <span class="n">OBJECT</span><span class="p">;</span>
      <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="nv">$name</span><span class="p">}</span><span class="o">-&gt;</span><span class="p">{</span><span class="nv">$id</span><span class="p">}</span> <span class="o">=</span> <span class="nv">$value</span><span class="p">;</span>      
    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
      <span class="n">croak</span> <span class="s">&quot;$self is not an object of class $force_type!&quot;</span>    
    <span class="p">}</span>    
  <span class="p">}</span>
<span class="p"></span>
  <span class="k">return</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="nv">$name</span><span class="p">};</span>
<span class="p">}</span>
<span class="p"></span>
<span class="c1">#################################</span>
<span class="p"></span>
<span class="k">sub </span><span class="nf">DESTROY</span> <span class="p">{</span>
<span class="p"></span>
<span class="p">}</span>
<span class="p"></span>
<span class="p"></span>
<span class="mi">1</span><span class="p">;</span>
<span class="cp">__END__</span>
<span class="cp"># Below is stub documentation for your module. You&#39;d better edit it!</span>
<span class="p"></span>
<span class="cp">=head1 NAME</span>
<span class="p"></span>
<span class="cp">SOMSDS - Perl extension for blah blah blah</span>
<span class="p"></span>
<span class="cp">=head1 SYNOPSIS</span>
<span class="p"></span>
<span class="cp">  use SOMSDS;</span>
<span class="cp">  blah blah blah</span>
<span class="p"></span>
<span class="cp">=head1 DESCRIPTION</span>
<span class="p"></span>
<span class="cp">Stub documentation for SOMSDS, created by h2xs. It looks like the</span>
<span class="cp">author of the extension was negligent enough to leave the stub</span>
<span class="cp">unedited.</span>
<span class="p"></span>
<span class="cp">Blah blah blah.</span>
<span class="p"></span>
<span class="cp">=head2 EXPORT</span>
<span class="p"></span>
<span class="cp">None by default.</span>
<span class="p"></span>
<span class="p"></span>
<span class="p"></span>
<span class="cp">=head1 SEE ALSO</span>
<span class="p"></span>
<span class="cp">Mention other useful documentation such as the documentation of</span>
<span class="cp">related modules or operating system documentation (such as man pages</span>
<span class="cp">in UNIX), or any relevant external documentation such as RFCs or</span>
<span class="cp">standards.</span>
<span class="p"></span>
<span class="cp">If you have a mailing list set up for your module, mention it here.</span>
<span class="p"></span>
<span class="cp">If you have a web site set up for your module, mention it here.</span>
<span class="p"></span>
<span class="cp">=head1 AUTHOR</span>
<span class="p"></span>
<span class="cp">Germán, E&lt;lt&gt;german.gomezherrero@kasku.orgE&lt;gt&gt;</span>
<span class="p"></span>
<span class="cp">=head1 COPYRIGHT AND LICENSE</span>
<span class="p"></span>
<span class="cp">Copyright (C) 2011 by German Gomez-Herrero</span>
<span class="p"></span>
<span class="cp">This library is free software; you can redistribute it and/or modify</span>
<span class="cp">it under the same terms as Perl itself, either Perl version 5.14.1 or,</span>
<span class="cp">at your option, any later version of Perl 5 you may have available.</span>
<span class="p"></span>
<span class="p"></span>
<span class="cp">=cut</span>
</pre></div>

<p><span class="p"></span></p>
</div>
<div id="footer">
<p><a href="http://kaba.hilvi.org/remark">Remark</a> documentation system - Page generated 26.03.2012 15:40.</p>
</div>
</div>
</body>
</html>
