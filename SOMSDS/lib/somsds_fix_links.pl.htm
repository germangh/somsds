<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en-US" lang="en-US">
<head>
<title>Fixes symbolic links within a directory</title>
<link rel="stylesheet" type="text/css" href="../../remark_files/remark.css" />
<link rel="stylesheet" type="text/css" href="../../remark_files/pygments.css" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8"></meta>
</head>
<body>
<div id = "container">
<div id = "remark">
<h1>somsds_fix_links.pl</h1>
<p><a href="utilities.htm">Back to Utility scripts</a></p>
<p><a href="directory.htm">SOMSDS/lib/</a></p>
<div class="highlight"><pre><span class="c1">#!/usr/bin/perl</span>
<span class="c1"># (c) German Gomez-Herrero, g.gomez@nin.knaw.nl</span>
<span class="p"></span>
<span class="c1"># Description: Fixes symbolic links within a directory</span>
<span class="c1"># Documentation: utilities.txt</span>
<span class="p"></span>
<span class="k">use</span> <span class="n">strict</span><span class="p">;</span>
<span class="k">use</span> <span class="n">warnings</span><span class="p">;</span>
<span class="k">use</span> <span class="nn">Config::</span><span class="n">IniFiles</span><span class="p">;</span>
<span class="k">use</span> <span class="nn">File::Spec::</span><span class="n">Functions</span><span class="p">;</span>
<span class="k">use</span> <span class="nn">File::</span><span class="n">Find</span><span class="p">;</span>
<span class="k">use</span> <span class="nn">Shell::</span><span class="n">Command</span><span class="p">;</span>
<span class="k">use</span> <span class="nn">Getopt::</span><span class="n">Long</span><span class="p">;</span>
<span class="p"></span>
<span class="p"></span>
<span class="k">my</span> <span class="nv">$help</span><span class="p">;</span>
<span class="k">my</span> <span class="nv">$force</span><span class="p">;</span>
<span class="k">my</span> <span class="nv">$makeabs</span><span class="p">;</span>
<span class="k">my</span> <span class="nv">$makerel</span><span class="p">;</span>
<span class="k">my</span> <span class="nv">$new</span><span class="o">=</span><span class="s">&#39;&#39;</span><span class="p">;</span>
<span class="k">my</span> <span class="nv">$old</span><span class="p">;</span>
<span class="p"></span>
<span class="n">GetOptions</span><span class="p">(</span> 
            <span class="s">&quot;help&quot;</span>                  <span class="o">=&gt;</span> <span class="o">\</span><span class="nv">$help</span><span class="p">,</span> 
            <span class="s">&quot;force&quot;</span>                 <span class="o">=&gt;</span> <span class="o">\</span><span class="nv">$force</span><span class="p">,</span>
            <span class="s">&quot;makeabs&quot;</span>                            <span class="o">=&gt;</span> <span class="o">\</span><span class="nv">$makeabs</span><span class="p">,</span>
            <span class="s">&quot;makerel&quot;</span>               <span class="o">=&gt;</span> <span class="o">\</span><span class="nv">$makerel</span><span class="p">,</span>
            <span class="s">&quot;new=s&quot;</span>                 <span class="o">=&gt;</span> <span class="o">\</span><span class="nv">$new</span><span class="p">,</span>
            <span class="s">&quot;old=s&quot;</span>                 <span class="o">=&gt;</span> <span class="o">\</span><span class="nv">$old</span>
          <span class="p">);</span>
<span class="p"></span>
<span class="p"></span>
<span class="k">my</span> <span class="nv">$dir</span> <span class="o">=</span> <span class="nb">shift</span><span class="p">;</span>
<span class="p"></span>
<span class="k">unless</span> <span class="p">(</span><span class="nv">$dir</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="nv">$old</span> <span class="o">||</span> <span class="nv">$makerel</span> <span class="o">||</span> <span class="nv">$makeabs</span><span class="p">)){</span>
  <span class="k">print</span> <span class="s">&quot;</span>
<span class="s">  </span>
<span class="s">  Usage:</span>
<span class="s">  </span>
<span class="s">  somsds_fix_links directory [--]</span>
<span class="s">  </span>
<span class="s">  Where:</span>
<span class="s">  </span>
<span class="s">  directory       The directory tree where the symbolic links are contained</span>
<span class="s">  </span>
<span class="s">  </span>
<span class="s">                  </span>
<span class="s">  ## Accepted options:</span>
<span class="s">  </span>
<span class="s">  --force         Fix links, even if not broken. Useful when the links refer to</span>
<span class="s">                  a temporary location, like a external drive.</span>
<span class="s">  </span>
<span class="s">  --makeabs       Force the links to have absolute target paths.</span>
<span class="s">  </span>
<span class="s">  --makerel       Force the links to have relative target paths.</span>
<span class="s">  </span>
<span class="s">  --old           A regular expression pattern to be matched against the target</span>
<span class="s">                  of every broken link, or of every link within the directory </span>
<span class="s">                  tree (if the --force flag is used).</span>
<span class="s">                  </span>
<span class="s">  --new           What should replace the old pattern in the target of every </span>
<span class="s">                  broken link. If not provided then the old pattern will be </span>
<span class="s">                  simply removed from the target.</span>
<span class="s">  </span>
<span class="s">  --help          Display this help.</span>
<span class="s">  </span>
<span class="s">  &quot;</span><span class="p">;</span>
  <span class="nb">die</span> <span class="s">&quot;\n&quot;</span><span class="p">;</span>
<span class="p">}</span>
<span class="p"></span>
<span class="nv">$dir</span>  <span class="o">=</span> <span class="nn">File::</span><span class="n">Spec</span><span class="o">-&gt;</span><span class="n">rel2abs</span><span class="p">(</span><span class="nv">$dir</span><span class="p">);</span>
<span class="k">if</span> <span class="p">(</span><span class="nv">$old</span><span class="p">){</span><span class="nv">$old</span>  <span class="o">=</span> <span class="n">canonpath</span><span class="p">(</span><span class="nn">File::</span><span class="n">Spec</span><span class="o">-&gt;</span><span class="n">rel2abs</span><span class="p">(</span><span class="nv">$old</span><span class="p">));}</span>
<span class="k">if</span> <span class="p">(</span><span class="nv">$new</span><span class="p">){</span><span class="nv">$new</span>  <span class="o">=</span> <span class="n">canonpath</span><span class="p">(</span><span class="nn">File::</span><span class="n">Spec</span><span class="o">-&gt;</span><span class="n">rel2abs</span><span class="p">(</span><span class="nv">$new</span><span class="p">));}</span>
<span class="p"></span>
<span class="n">find</span> <span class="p">(</span><span class="o">\&amp;</span><span class="n">fix_symlink</span><span class="p">,</span> <span class="nv">$dir</span><span class="p">);</span>
<span class="p"></span>
<span class="p"></span>
<span class="k">sub </span><span class="nf">fix_symlink</span><span class="p">()</span> <span class="p">{</span>
  <span class="k">unless</span> <span class="p">(</span><span class="o">-</span><span class="n">l</span> <span class="nv">$</span><span class="nn">File::Find::</span><span class="nv">name</span> <span class="o">&amp;&amp;</span> 
    <span class="p">(</span><span class="nv">$force</span> <span class="o">||</span> <span class="nv">$makeabs</span> <span class="o">||</span> <span class="nv">$makerel</span> <span class="o">||</span> <span class="o">!-</span><span class="n">e</span><span class="p">)){</span> <span class="k">return</span><span class="p">;}</span>
  <span class="k">if</span> <span class="p">(</span><span class="nb">defined</span><span class="p">(</span><span class="k">my</span> <span class="nv">$target</span> <span class="o">=</span> <span class="nb">readlink</span><span class="p">(</span><span class="nv">$</span><span class="nn">File::Find::</span><span class="nv">name</span><span class="p">))){</span>
    <span class="k">print</span> <span class="s">&quot;\n&quot;</span><span class="p">;</span>
    <span class="k">print</span> <span class="s">&quot;Before: $target\n&quot;</span><span class="p">;</span>
    <span class="k">if</span> <span class="p">(</span><span class="nv">$makeabs</span> <span class="o">||</span> <span class="nv">$makerel</span><span class="p">){</span>
       <span class="nv">$target</span> <span class="o">=</span> <span class="n">canonpath</span><span class="p">(</span><span class="nn">File::</span><span class="n">Spec</span><span class="o">-&gt;</span><span class="n">rel2abs</span><span class="p">(</span><span class="nv">$target</span><span class="p">));</span>
    <span class="p">}</span>
    <span class="k">if</span> <span class="p">(</span><span class="nv">$makerel</span><span class="p">){</span>
      <span class="nv">$target</span> <span class="o">=</span> <span class="n">canonpath</span><span class="p">(</span><span class="nn">File::</span><span class="n">Spec</span><span class="o">-&gt;</span><span class="n">abs2rel</span><span class="p">(</span><span class="nv">$target</span><span class="p">));</span>
    <span class="p">}</span>
    <span class="k">if</span> <span class="p">(</span><span class="nv">$old</span><span class="p">){</span><span class="nv">$target</span> <span class="o">=~</span> <span class="sr">s%$old%$new%g</span><span class="p">;}</span>
    <span class="k">print</span> <span class="s">&quot;After: $target\n&quot;</span><span class="p">;</span>
    <span class="nb">unlink</span> <span class="nv">$</span><span class="nn">File::Find::</span><span class="nv">name</span><span class="p">;</span>
    <span class="nb">symlink</span> <span class="nv">$target</span><span class="p">,</span> <span class="nv">$</span><span class="nn">File::Find::</span><span class="nv">name</span> <span class="ow">or</span> <span class="nb">die</span> <span class="s">&quot;Couldn&#39;t create link $File::Find::name: $!&quot;</span><span class="p">;</span>    
  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
    <span class="k">print</span> <span class="s">&quot;\n&quot;</span><span class="p">;</span>
    <span class="k">print</span> <span class="s">&quot;Link $File::Find::name points nowhere: $!\n&quot;</span>
  <span class="p">}</span>
<span class="p">}</span> 
</pre></div>

<p><span class="p"></span></p>
</div>
<div id="footer">
<p><a href="http://kaba.hilvi.org/remark">Remark</a> documentation system - Page generated 26.03.2012 15:40.</p>
</div>
</div>
</body>
</html>
