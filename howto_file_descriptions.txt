Step 3: Generate file descriptions
============

[[Parent]]: howto_recordings.txt

The SOMSDS scripts can automatically generate symbolic links with suitable names
to the most relevant data files in a recording. However, for the scripts to 
be able to do that, they need to know two pieces of information:

* The sub-set of experimental files that are deemed relevant enough to be 
worth linking to.
* The subject ID, modality ID, condition ID, etc. corresponding to each of these
relevant data files.

The former is needed because the set of data files that are to be used in 
everyday analyses is usually much smaller that the actual set of files acquired
during a recording session. The latter is required in order to generate symbolic
links with standard names, as described in [The SOMSDS Data Structure][ds]

[ds]: ./ds.htm


## File name translation

In the [previous step][howto_dirtree] we placed our files in folders like:

	/data/recordings/bcgs/subjects/$SUBJID/$MODID/orig/$CONDID/


[howto_dirtree]: ./howto_dirtree.htm

Thanks to that, the SOMSDS scripts can easily guess the subject, 
modality and condition IDs of all your data files, as this information is simply
encoded in the location of each file. 

Guessing the block ID of a given file is not that straightforward, as different 
researchers, or different recording devices, may use different ways to encode
this information in a file name. For instance, see how the researcher that 
acquired the `bcgs` data named the EEG files for subject `0002`:
	
	.../0002/eeg/orig/out/outside_JM_run1.mff 
	.../0002/eeg/orig/out/outside_JM_run2.mff 
	.../0002/eeg/orig/out/outside_JM_run3.mff 
	.../0002/eeg/orig/out/outside_JM_run4.mff 

	.../0002/eeg/orig/in-noscan/inside_noscan_JM_run1.mff
	.../0002/eeg/orig/in-noscan/inside_noscan_JM_run2.mff
	.../0002/eeg/orig/in-noscan/inside_noscan_JM_run3.mff
	.../0002/eeg/orig/in-noscan/inside_noscan_JM_run4.mff

	.../0002/eeg/orig/in-scan/inside_noscan_JM_run1.mff
	.../0002/eeg/orig/in-scan/inside_noscan_JM_run2.mff
	.../0002/eeg/orig/in-scan/inside_noscan_JM_run3.mff
	.../0002/eeg/orig/in-scan/inside_noscan_JM_run4.mff

Clearly the number after the text `run` is the block number of a given EEG file.
On the other hand, modality `smri` consists of files with names like:

	.../smri/orig/ger001_WIP_c32_cap_B0_SENSE_FSL_8_1.nii
	.../smri/orig/ger001_WIP_c32_cap_T1_SENSE_FSL_9_1.nii
	...
	... etc

and in this case we would like to be able to guess the MRI scanning 
technique, i.e. whether the scan is a T1 or a B1 scan. Finally, for the `fmri`
 modality we have files like the ones below:

	.../fmri/orig/ger001_WIP_c32_cap_check_SENSE_FSL_3_1.nii
	.../fmri/orig/ger001_WIP_c32_cap_check_SENSE_FSL_4_1.nii
	.../fmri/orig/ger001_WIP_c32_cap_check_SENSE_FSL_5_1.nii
	.../fmri/orig/ger001_WIP_c32_cap_check_SENSE_FSL_7_1.nii

In this last case, the SOMSDS scripts should be able to realize that each of
the files above is just a different scanning block: `3_1`, `4_1`, `5_1`, `7_1`. 
Note that, in this recording, the term _block_ has a different meaning for EEG
 and fMRI files. 

Most often, the naming convention used with files of a given modality can be
 compactly expressed using a so-called _translation file_. Below we describe 
how to write such translation files for recording `bcgs`.

### Modality eeg

For the EEG modality 
the `bcgs_eeg-translation.ini` translation file looks like this:
	
	# Translation file for the EEG modality of recording bcgs
	
	# This line is a comment

	[block_id]
	# The regular expression below translate a file name to a block ID

	regexp="s%^.+run(\d).*$%$1%"

	[file_id]
	# The regular expression below matches all files to which a symbolic link
	# should be generated. In our case, we only want links to be generated to 
	# files/directories ending in .mff
	
	regexp =".mff$"


If you don't know what a [regular expression][regexp] is, you will have to ask
 [someone who knows][germanemail] to write the _translation file_
for you. You will have to write such a file only once, provided of course that
you don't change the  way you name your files in the future. That is, if we
acquire more `bcgs` subjects in the future you should use file names containing
the string `runD` (with `D` a number) to tell the block number of the file. 

[regexp]: http://en.wikipedia.org/wiki/Regular_expression
[germanemail]: mailto:g.gomez@nin.knaw.nl

### Modality smri

For the structural MRI modality of the `bcgs` recording, the translation file 
`bcgs_translation-smri.ini` looks like this:

	[technique_id]
	# Translation from file name to technique id
	regexp="s%^.+(T1|B0|B1|SmartBrain).+$%$1%"

	[technique_id_map]
	# This section can be used to defined a mapping from the technique
	# IDs picked from the file names and the actual technique IDs that
	# we want to use when generating the symbolic links
	T1=t1
	B0=b0
	B1=b1
	SmartBrain=sbrain

	[file_id]
	# This regular expression matches all files to which links are to
	# be generated. In this case we want to generate links only to
	# files having an ancestor directory smri and having an extension .nii
	regexp =".+/smri/.+\.nii$"

### Modality fmri

For the functional MRI we have the file `bcgs_translation-fmri.ini`:

	[block_id]
	# Translation from file name to block id
	regexp="s%^.+_(\d+)_(\d+)\..+$%$1-$2%"

	[file_id]
	# This regular expression matches the files that will be linked
	regexp =".+/fmri/.+\.nii$"


Once you have written your translation files, it is a good idea to place them
in the `doc` folder of your recording. For recording `bcgs` we place them under
`/data/recordings/bcgs/doc`.


## Generate tags for each file

At this point you should run:

	somsds_describe /data/recordings/bcgs 
	    --conf bcgs_translation-eeg.ini, 
	           bcgs_translation-fmri.ini, 
	           bcgs_translation-smri.ini

The command above will create (under `/data/recordings/bcgs`) a
 _descriptor file_ for each input 
translation file. A descriptor file is a comma separated values (.csv) file that
specifies the values of various information tags for all files to which symbolic
links are to be generated.  

### Descriptor file for modality smri

The contents of descriptor file `files_bcgs-translation-smri.csv` 
are summarized below:

	"id","subject","modality","device","technique","condition","session","block","meta"
	"subjects/0001/smri/orig/ger001_WIP_c32_cap_B1_SENSE_FSL_8_1.nii","0001","smri",,"b1",,,,,
	"subjects/0001/smri/orig/ger001_WIP_SmartBrain_FSL_1_1.nii","0001","smri",,"sbrain",,,,,
	"subjects/0001/smri/orig/ger001_WIP_c32_cap_T1_SENSE_FSL_9_1.nii","0001","smri",,"t1",,,,,
	"subjects/0002/smri/orig/ger001_WIP_c32_cap_B0_SENSE_FSL_18_1.nii","0002","smri",,"b0",,,,,
	"subjects/0002/smri/orig/ger001_WIP_c32_cap_T1_SENSE_FSL_16_1.nii","0002","smri",,"t1",,,,,
	"subjects/0002/smri/orig/ger001_WIP_c32_cap_B1_SENSE_FSL_17_1.nii","0002","smri",,"b1",,,,,

### Descriptor file for modality fmri

The contents of descriptor file `files_bcgs-translation-fmri.csv` are:

	"id","subject","modality","device","technique","condition","session","block","meta"
	"subjects/0001/fmri/orig/ger001_WIP_c32_cap_check_SENSE_FSL_4_1.nii","0001","fmri",,,,,"4-1",,
	"subjects/0001/fmri/orig/ger001_WIP_c32_cap_check_SENSE_FSL_5_1.nii","0001","fmri",,,,,"5-1",,
	"subjects/0001/fmri/orig/ger001_WIP_c32_cap_check_SENSE_FSL_3_1.nii","0001","fmri",,,,,"3-1",,
	"subjects/0001/fmri/orig/ger001_WIP_c32_cap_check_SENSE_FSL_7_1.nii","0001","fmri",,,,,"7-1",,
	"subjects/0002/fmri/orig/ger001_WIP_c32_cap_check_SENSE_FSL_12_1.nii","0002","fmri",,,,,"12-1",,
	"subjects/0002/fmri/orig/ger001_WIP_c32_cap_check_SENSE_FSL_14_1.nii","0002","fmri",,,,,"14-1",,
	"subjects/0002/fmri/orig/ger001_WIP_c32_cap_check_SENSE_FSL_15_1.nii","0002","fmri",,,,,"15-1",,
	"subjects/0002/fmri/orig/ger001_WIP_c32_cap_check_SENSE_FSL_13_1.nii","0002","fmri",,,,,"13-1",,

### Descriptor file for modality eeg

The contents of `files_bcgs-translation-eeg.csv` look like:

	"id","subject","modality","device","technique","condition","session","block","meta"
	"subjects/0001/eeg/orig/in-scan/inside_scan_GGH_run4.mff","0001","eeg",,,"in-scan",,"4",,
	"subjects/0001/eeg/orig/in-scan/inside_scan_GGH_run3.mff","0001","eeg",,,"in-scan",,"3",,
	"subjects/0001/eeg/orig/in-scan/inside_scan_GGH_run1.mff","0001","eeg",,,"in-scan",,"1",,
	"subjects/0001/eeg/orig/in-scan/inside_scan_GGH_run2.mff","0001","eeg",,,"in-scan",,"2",,
	"subjects/0001/eeg/orig/in-noscan/inside_noscan_GGH_run3.mff","0001","eeg",,,"in-noscan",,"3",,
	"subjects/0001/eeg/orig/in-noscan/inside_noscan_GGH_run1.mff","0001","eeg",,,"in-noscan",,"1",,
	"subjects/0001/eeg/orig/in-noscan/inside_noscan_GGH_run2.mff","0001","eeg",,,"in-noscan",,"2",,
	"subjects/0001/eeg/orig/in-noscan/inside_noscan_GGH_run4.mff","0001","eeg",,,"in-noscan",,"4",,
	"subjects/0001/eeg/orig/out/outside_GGH_run4.mff","0001","eeg",,,"out",,"4",,
	"subjects/0001/eeg/orig/out/outside_GGH_run3.mff","0001","eeg",,,"out",,"3",,
	"subjects/0001/eeg/orig/out/outside_GGH_run1.mff","0001","eeg",,,"out",,"1",,
	... FILES FOR SUBJECT 0002 ARE OMITTED


It is important that you inspect the generated descriptor files to ensure that 
the tags have been properly identified and that all the relevant files are there.
Remember that __only the files that appear in at least one of the descriptor files
will be linked to__.


__NOTE:__ Instead of using script `somsds_describe` to generate the files above,
you could also write them yourself, either manually or using your own scripts.
 In this case, it is important that you name your _descriptor file(s)_ like
 `files[anything].csv`, where `[anything]` can be any text. Moreover, you should
ensure that the internal format of your .csv files is identical to the format 
of the examples above. For instance, __you should not have any spurious spaces 
before or after the separation commas__. 

## Hint

Sometimes script `somsds_describe` outputs so much information to the screen 
that it is difficult (or impossible) to know whether any warnings were generated.
In such cases you can redirect the standard output of `somsds_describe` to a 
text file so that only warnings will be displayed. That is, you could run:

	somsds_describe /data/recordings/bcgs 
	    --conf bcgs_translation-eeg.ini, 
	           bcgs_translation-fmri.ini, 
	           bcgs_translation-smri.ini > output.txt



## What now?

We are now ready to go to the [next step][howto_make_links], that is to
generate the symbolic links with the standard naming convention discussed in 
[The SOMSDS data structure][somsds]

[howto_make_links]: ./howto_make_links.htm
[somsds]: ./ds.htm
