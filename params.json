{"tagline":"somerenserver data structure scripts","body":"somsds\r\n======\r\n\r\nA lightweight system for managing large neuroimaging datasets in a \r\nshared computing environment. There are two main components of _somsds_: \r\n\r\n* A backend SQL database, which may be queried directly using `somsds_sql`.\r\n* A Perl interface giving access to the most common use cases: archiving and retrieving data.\r\n\r\nThere is no public documentation yet on how to archive data. In any case, only \r\nsuperusers of the shared computing environment can archive data. Thus most users \r\nwill only want to know how to retrieve data files from _somsds_.\r\n\r\n## Installation\r\n\r\n_somsds_ should work out of the box on most Linux distributions and on Mac OS X. \r\nIn theory it should work also under Windows with some minor modifications. \r\n\r\n\tclone git://github.com/germangh/somsds\r\n\tcd sosmds\r\n\t./somsds_install.pl\r\n\t\r\n## Retrieving data\r\n\r\n\tsomsds_link2rec [recid] [--]\r\n\t\r\nwhere `[recid]` is the ID of the _recording_ from which data should be retrieved. A\r\nseries of optional arguments will typically follow indicating the subset of data \r\nthat we want to gain access to. For instance, one could retrieve all structural \r\nMRI datasets from recording `ssmd` using:\r\n\r\n\tsomsds_link2rec ssmd --condition rs-ec --modality smri\r\n\t\r\nApart from `condition`, `modality`, and `subject` there are several other _tags_ \r\nthat may be used to filter the set of files to be retrieved, e.g. `subject`, `technique`, \r\n`device`, `sex`, `age`, etc. See the command line documentation of script \r\n`somsds_link2rec` for more information.\r\n\r\n\r\n## Recording IDs, condition IDs, etc...\r\n\r\nTo produce a list of the available recordings together with a short description:\r\n\r\n\tsomsds_rec_list\r\n\r\nTo list all valid condition IDs (together with a short description)\r\n for recording `ssmd`:\r\n \r\n\tsomsds_rec_get ssmd condition\r\n\t\r\nIn general, the accepted values of tag `[tagname]` for recording `[recid]` can be\r\nlisted using:\r\n\r\n\tsomsds_rec_get [recid] [tagname]\r\n\t\r\n\t\r\n## Symbolic links\r\n\r\nScript `somsds_link2rec` will __not__ create copies of the relevant data files. \r\nInstead it will create symbolic links with to the actual data files. The main \r\nreasons for this being the desired behaviour are:\r\n\r\n* It is unaffordable (and wasteful) to create copies of the raw data files each \r\ntime they are retrieved. _Raw_ data files should be (and, in fact, _somsds_ \r\nenforces them to be) inmutable so there is no need of keeping multiple copies. \r\n\r\n* Raw data files may have arbitrary file names. In some cases, the names of such \r\nfiles are automatically given by the recording device (e.g. an MR scanner), and \r\nthose names give no clue of the actual contents of the data file (e.g. Philips MR \r\nscanners' physiology files). Lacking standard file naming conventions is a great \r\nobstacle to scripting analysis pipelines. By using symbolic links, the _somsds_ \r\nsystem is able to name the symbolic links so that they follow (user configurable) naming \r\nconventions. \r\n\r\n\r\n## License\r\n\r\nReleased under the [Creative Commons Attribution-NonCommercial-ShareAlike licence](http://creativecommons.org/licenses/by-nc-sa/3.0/)\r\n\r\n","google":"UA-2923001-7","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Somsds"}